Tk,ttk::entry,TEntry,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Database Class: **ValidateCommand**     A script template to evaluate whenever
validation is triggered. If set to the empty string (the default), validation
is disabled. The script must return a boolean value. See **VALIDATION** below.}} Tk,ttk::button,TButton,-default {-default default Default normal Listtype {normal active disabled} {**Default**     May be set to one of **normal** , **active** , or
**disabled**. In a dialog box, one button may be designated the "default"
button (meaning, roughly, "the one that gets invoked when the user presses
<Enter>"). **active** indicates that this is currently the default button;
**normal** means that it may become the default button, and **disabled** means
that it is not defaultable. The default is **normal**.}} BWidget,ListBox,ListBox,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,ttk::checkbutton,TCheckbutton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,Separator,Separator,-bg {-bg background {} {} Entrytype {} {}} Tk,tablelist::tablelist,Tablelist,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} BWidget,ListBox,ListBox,-droptypes {-droptypes droptypes droptypes {LISTBOX_ITEM {copy {} move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation.
Default is _LISTBOX_ITEM_ with operations **copy** and **move**.}} Tk,tablelist::tablelist,Tablelist,-arrowstyle {-arrowstyle arrowStyle ArrowStyle flat8x4 Listtype {flat6x4 flat7x4 flat7x5 flat7x7 flat8x4 flat8x5 flat9x5 flat9x6 flat11x6 flat13x7 flat15x8 flatAngle7x4 flatAngle7x5 flatAngle9x5 flatAngle9x6 flatAngle9x7 flatAngle10x6 flatAngle10x7 flatAngle11x6 flatAngle13x7 flatAngle15x8 photo7x4 photo7x7 photo9x5 photo11x6 photo13x7 photo15x8 sunken8x7 sunken10x9 sunken12x11} {}} Tk,ttk::spinbox,TSpinbox,-foreground {-foreground textColor TextColor {} Colortype {} {Specifies the color of the border of the rectangle.}} Tk,radiobutton,Radiobutton,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,spinbox,Spinbox,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} BWidget,SpinBox,SpinBox,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,canvas,Canvas,-yscrollincrement {-yscrollincrement yScrollIncrement ScrollIncrement 0 Integertype {} {Specifies an increment for vertical
scrolling, in any of the usual forms permitted for screen distances. If the
value of this option is greater than zero, the vertical view in the window
will be constrained so that the canvas y coordinate at the top edge of the
window is always an even multiple of **yScrollIncrement** ; furthermore, the
units for scrolling (e.g., the change in view when the top and bottom arrows
of a scrollbar are selected) will also be **yScrollIncrement**. If the value
of this option is less than or equal to zero, then vertical scrolling is
unconstrained.}} Tk,button,Button,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,tablelist::tablelist,Tablelist,-sortcommand {-sortcommand sortCommand SortCommand {} Entrytype {} {}} Tk,menubutton,Menubutton,-fg {-fg -foreground {} {} Colortype {} {}} Tk,button,Button,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} BWidget,LabelFrame,LabelFrame,-anchor {-anchor anchor Anchor w Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} BWidget,LabelFrame,LabelFrame,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,LabelFrame,LabelFrame,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,LabelEntry,LabelEntry,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,listbox,Listbox,-state {-state state State normal Listtype {disabled normal} {Specifies one of two states for the listbox: **normal** or
**disabled**. If the listbox is disabled then items may not be inserted or
deleted, items are drawn in the **-disabledforeground** color, and selection
cannot be modified and is not shown (though selection information is
retained).}} BWidget,ScrollableFrame,Canvas,-areaheight {-areaheight areaheight areaheight 0 Integertype {} {Specifies the height for the scrollable area. If zero, then the height of the scrollable area is made just large enough to hold all its children.}} BWidget,Dialog,Dialog,-geometry {-geometry geometry geometry {} Entrytype {} {Set the **geometry** used when method **draw** is called. See **wm geometry** for a parameter description.}} BWidget,ArrowButton,ArrowButton,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,Entry,Entry,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.
If **dragendcmd** is empty, the internal _dragend_ command updates the entry
following the operation ( **move** or **copy** ) and the dragged data (whole
or selected part of the entry).}} BWidget,PanedWindow,PanedWindow,-activator {-activator activator activator {} Entrytype {} {By default, the control sash is either a button or a line depending upon the underlying operating system. This sash may be explicitly set using this option. If set to **line** then the sash consists of just a dividing line. Otherwise if set to **button** then it constists of a knob that can be dragged.}} Tk,tablelist::tablelist,Tablelist,-movablecolumns {-movablecolumns movableColumns MovableColumns 0 Listtype {True False} {}} Tk,scale,Scale,-troughcolor {-troughcolor troughColor Background #b3b3b3 Colortype {} {Specifies the color to use for the rectangular
trough areas in widgets such as scrollbars and scales. This option is ignored
for scrollbars on Windows (native widget does not recognize this option).}} BWidget,ScrollableFrame,Canvas,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} BWidget,SpinBox,SpinBox,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,LabelFrame,LabelFrame,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} Tk,ttk::spinbox,TSpinbox,-wrap {-wrap wrap Wrap 0 Listtype {True False} {Must be a proper boolean value. If on, the spinbox will wrap around the values
of data in the widget.}} BWidget,ComboBox,ComboBox,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,radiobutton,Radiobutton,-selectcolor {-selectcolor selectColor Background #ffffff Entrytype {} {Specifies a background color to use when the button
is selected. If **indicatorOn** is true then the color is used as the
background for the indicator regardless of the select state. If
**-indicatoron** is false, this color is used as the background for the entire
widget, in place of **-background** or **-activeBackground** , whenever the
widget is selected. If specified as an empty string then no special color is
used for displaying when the widget is selected.}} BWidget,LabelEntry,LabelEntry,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,button,Button,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} BWidget,SpinBox,SpinBox,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} Tk,button,Button,-relief {-relief relief Relief raised Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,checkbutton,Checkbutton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,ttk::labelframe,TLabelframe,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} BWidget,ArrowButton,ArrowButton,-clean {-clean clean clean 2 Integertype {} {Specifies a level of quality, between 0 and 2, for the arrow. If 0, the arrow is drawn with its maximum width and height. If 1, the base of arrow is arranged to be odd to have same edges. If 2, the base of arrow is arranged to be odd and the orthogonal to be (base+1)/2 to have 'straight' diagonal for edges.}} BWidget,MainFrame,Frame,-progressvar {-progressvar progressvar progressvar {} Entrytype {} {}} BWidget,SpinBox,SpinBox,-foreground {-foreground foreground Foreground black Colortype {} {Specifies the color of the border of the rectangle.}} Tk,tablelist::tablelist,Tablelist,-editselectedonly {-editselectedonly editSelectedOnly EditSelectedOnly 0 Listtype {True False} {}} BWidget,Entry,Entry,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this widget. See also [DynamicHelp](DynamicHelp.html).}} BWidget,LabelEntry,LabelEntry,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} BWidget,MainFrame,Frame,-height {-height height Height 0 Integertype {} {Specifies the desired height for the user frame in any of the forms acceptable to Tk_GetPixels. If this option is less than or equal to zero (the default) then the window will not request any size at all.}} Tk,labelframe,Labelframe,-relief {-relief relief Relief groove Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,ttk::separator,TSeparator,-style {-style style Style {} Entrytype {} {}} Tk,ttk::labelframe,TLabelframe,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,frame,Frame,-width {-width width Width 0 Integertype {} {Specifies the desired width for the window in any of the forms
acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this option is
less than or equal to zero then the window will not request any size at all.
Note that this sets the total width of the frame, any **-borderwidth** or
similar is not added. Normally **-width** should not be used if a propagating
geometry manager, such as **[grid](../TkCmd/grid.htm)** or
**[pack](../TkCmd/pack.htm)** , is used within the frame since the geometry
manager will override the width of the frame.}} BWidget,ButtonBox,ButtonBox,-padx {-padx padX Pad 3m Integertype {} {Specifies a default value for the -padx option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,ButtonBox,ButtonBox,-pady {-pady padY Pad 1m Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} Tk,checkbutton,Checkbutton,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,LabelEntry,LabelEntry,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,checkbutton,Checkbutton,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,tablelist::tablelist,Tablelist,-tooltipaddcommand {-tooltipaddcommand tooltipAddCommand TooltipAddCommand {} Entrytype {} {}} Tk,radiobutton,Radiobutton,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} BWidget,ArrowButton,ArrowButton,-ipadx {-ipadx ipadx ipadx 0 Integertype {} {Specifies a minimun pad between the ArrowButton border and the right and left side of the arrow. The value is in screen units.}} Tk,radiobutton,Radiobutton,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,ArrowButton,ArrowButton,-ipady {-ipady ipady ipady 0 Integertype {} {Specifies a minimun pad between the ArrowButton border and the top and bottom side of the arrow. The value is in screen units.}} BWidget,LabelFrame,LabelFrame,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,ttk::spinbox,TSpinbox,-from {-from from From 0 Floattype {} {A floating-point value specifying the lowest value for the spinbox. This is
used in conjunction with **-to** and **-increment** to set a numerical range.}} Tk,ttk::entry,TEntry,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} Tk,message,Message,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ScrollView,Canvas,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,Label,Label,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {Specifies a command to be called when **dragevent** occurs on widget. **draginitcmd** must be a command conforming to the description of the option **draginitcmd** of **DragSite::[register](DragSite.html#register)**.
If **draginitcmd** is empty, the internal **draginitcmd** command is used
instead and returns:}} BWidget,SpinBox,SpinBox,-values {-values values values {} Entrytype {} {Specifies the values accepted by the SpinBox. This option takes precedence over **range** option.}} Tk,ttk::treeview,Treeview,-show {-show show Show {tree headings} Entrytype {} {A list containing zero or more of the following values, specifying which
elements of the tree to display.}} Tk,ttk::separator,TSeparator,-orient {-orient orient Orient horizontal Listtype {horizontal vertical} {Specifies the
orientation of the separator.}} Tk,spinbox,Spinbox,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} BWidget,ScrollableFrame,Canvas,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,Tree,Tree,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} Tk,ttk::scrollbar,TScrollbar,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,ttk::menubutton,TMenubutton,-menu {-menu menu Menu {} Entrytype {} {Specifies the path name of
the menu associated with the menubutton. To be on the safe side, the menu
ought to be a direct child of the menubutton.}} Tk,label,Label,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ScrollView,Canvas,-cursor {-cursor cursor Cursor crosshair Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,SpinBox,SpinBox,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,ScrollView,Canvas,-width {-width width Width 30 Integertype {} {Specifies the desired width for the ScrollView.}} Tk,tablelist::tablelist,Tablelist,-treecolumn {-treecolumn treeColumn TreeColumn 0 Listtype {active anchor end last left right @x y a number a name} {}} Tk,tablelist::tablelist,Tablelist,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,panedwindow,Panedwindow,-sashrelief {-sashrelief sashRelief Relief flat Listtype {flat groove raised ridge solid sunken} {Class: **SashRelief**     Relief to use when drawing a sash. May be any of the
standard Tk relief values.}} Tk,label,Label,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,checkbutton,Checkbutton,-onvalue {-onvalue onValue Value 1 Entrytype {} {Specifies value to store in the button's associated variable
whenever this button is selected. Defaults to "1".}} BWidget,ComboBox,ComboBox,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this page. See also [DynamicHelp](DynamicHelp.html).}} Tk,message,Message,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,Label,Label,-name {-name name name {} Entrytype {} {Specifies a standard name for the label. If the option *** _name_ Name** is found in the resource database, then **text** and **underline** options are extracted from its value.}} Tk,tablelist::tablelist,Tablelist,-bg {-bg -background {} {} Colortype {} {}} Tk,ttk::combobox,TCombobox,-postcommand {-postcommand postCommand PostCommand {} Entrytype {} {Class: **PostCommand**     A Tcl script to evaluate immediately before
displaying the listbox. The **-postcommand** script may specify the
**-values** to display.}} Tk,listbox,Listbox,-width {-width width Width 20 Integertype {} {Specifies the desired width for the window in characters. If the
font does not have a uniform width then the width of the character "0" is used
in translating from character units to screen units. If zero or less, then the
desired width for the window is made just large enough to hold all the
elements in the listbox.}} BWidget,Entry,Entry,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ComboBox,ComboBox,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} Tk,message,Message,-bg {-bg -background {} {} Colortype {} {}} Tk,checkbutton,Checkbutton,-selectcolor {-selectcolor selectColor Background #ffffff Entrytype {} {Specifies a background color to use when the button
is selected. If **indicatorOn** is true then the color is used as the
background for the indicator regardless of the select state. If
**indicatorOn** is false, this color is used as the background for the entire
widget, in place of **background** or **activeBackground** , whenever the
widget is selected. If specified as an empty string then no special color is
used for displaying when the widget is selected.}} Tk,scale,Scale,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,ttk::checkbutton,TCheckbutton,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,ttk::radiobutton,TRadiobutton,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,menu,Menu,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,ComboBox,ComboBox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} Tk,tablelist::tablelist,Tablelist,-height {-height height Height 10 Integertype {} {Specifies a desired height for the ArrowButton. The value is in screen units.}} BWidget,ListBox,ListBox,-dropcmd {-dropcmd dropcmd dropcmd ListBox::_drag_and_drop Entrytype {} {ListBox has a command wrapper for _drop_ events. This command stops auto scrolling and extract item and position.
If **dropcmd** is not empty, it is called with the following arguments:}} Tk,tablelist::tablelist,Tablelist,-labeldisabledforeground {-labeldisabledforeground labelDisabledForeground DisabledForeground #a3a3a3 Colortype {} {}} Tk,ttk::combobox,TCombobox,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} BWidget,Entry,Entry,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} Tk,spinbox,Spinbox,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,frame,Frame,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,frame,Frame,-background {-background background Background #d9d9d9 Colortype {} {Class: **Background**     This option is the same as the standard
**-background** option except that its value may also be specified as an empty
string. In this case, the widget will display no background or border, and no
colors will be consumed from its colormap for its background and border.}} BWidget,SpinBox,SpinBox,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} BWidget,ComboBox,ComboBox,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,spinbox,Spinbox,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,panedwindow,Panedwindow,-proxyrelief {-proxyrelief proxyRelief Relief {} Entrytype {} {Class: **ProxyRelief**     Relief to use when drawing the proxy. May be any of
the standard Tk relief values. If an empty string, the value of the
**-sashrelief** option will be used.}} Tk,menu,Menu,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} BWidget,ComboBox,ComboBox,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} BWidget,Button,Button,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,LabelEntry,LabelEntry,-command {-command command Command {} Entrytype {} {Specifies the prefix of a Tcl command to invoke whenever the
scale's value is changed via a widget command. The actual command consists of
this option followed by a space and a real number indicating the new value of
the scale.}} BWidget,SpinBox,SpinBox,-range {-range range range {} Entrytype {} {Specifies a list of three intergers (or real) describing the minimum, maximum and increment of the SpinBox.}} Tk,tablelist::tablelist,Tablelist,-titlecolumns {-titlecolumns titleColumns TitleColumns 0 Integertype {} {}} Tk,text,Text,-state {-state state State normal Listtype {disabled normal} {Specifies one of two states for the text: **normal** or
**disabled**. If the text is disabled then characters may not be inserted or
deleted and no insertion cursor will be displayed, even if the input focus is
in the widget.}} Tk,tablelist::tablelist,Tablelist,-displayondemand {-displayondemand displayOnDemand DisplayOnDemand 1 Listtype {True False} {}} BWidget,Entry,Entry,-dropcmd {-dropcmd dropcmd dropcmd {} Entrytype {} {Entry has a command wrapper for _drop_ events. This command stops auto scrolling and extract current position.
If **dropcmd** is not empty, it is called with the following arguments:}} BWidget,ArrowButton,ArrowButton,-height {-height height Height 15 Integertype {} {Specifies a desired height for the ArrowButton. The value is in screen units.}} Tk,listbox,Listbox,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Tree,Tree,-height {-height height Height 10 Integertype {} {Specifies the desired height for the tree in units of **deltay** pixels.}} BWidget,Label,Label,-droptypes {-droptypes droptypes droptypes {TEXT    {move {}}
        IMAGE   {move {}}
        BITMAP  {move {}}
        FGCOLOR {move {}}
        BGCOLOR {move {}}
        COLOR   {move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation. Default accepts _FGCOLOR_ , _COLOR_ , _BGCOLOR_ , _TEXT_ , _BITMAP_ and _IMAGE_ , all with **copy** and **move** operations.}} BWidget,ComboBox,ComboBox,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,spinbox,Spinbox,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} Tk,tablelist::tablelist,Tablelist,-acceptdropcommand {-acceptdropcommand acceptDropCommand AcceptDropCommand {} Entrytype {} {}} Tk,ttk::scrollbar,TScrollbar,-style {-style style Style {} Entrytype {} {}} BWidget,NoteBook,NoteBook,-internalborderwidth {-internalborderwidth internalborderwidth internalborderwidth 10 Integertype {} {Value that is applied to each page in the NoteBook as its **-borderwidth** or **-bd**.}} Tk,radiobutton,Radiobutton,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,ArrowButton,ArrowButton,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the ArrowButton: **normal** , **active** , or **disabled**.}} Tk,button,Button,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,ttk::frame,TFrame,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,listbox,Listbox,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,text,Text,-undo {-undo undo Undo 0 Listtype {True False} {Specifies a boolean that says whether the undo mechanism is active or not.}} Tk,ttk::label,TLabel,-background {-background frameColor FrameColor {} Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,tablelist::tablelist,Tablelist,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,SpinBox,SpinBox,-state {-state state State normal Listtype {normal disabled} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,tablelist::tablelist,Tablelist,-labelcommand {-labelcommand labelCommand LabelCommand {} Entrytype {} {}} Tk,spinbox,Spinbox,-format {-format format Format {} Entrytype {} {Specifies an alternate format to use
when setting the string value when using the **-from** and **-to** range. This
must be a format specifier of the form **% <pad>.<pad>f**, as it will format a
floating-point number.}} Tk,message,Message,-fg {-fg -foreground {} {} Colortype {} {}} Tk,ttk::checkbutton,TCheckbutton,-style {-style style Style {} Entrytype {} {}} Tk,message,Message,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,listbox,Listbox,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,Entry,Entry,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,radiobutton,Radiobutton,-selectimage {-selectimage selectImage SelectImage {} Entrytype {} {Specifies an image to display (in place of the
**-image** option) when the radiobutton is selected. This option is ignored
unless the **-image** option has been specified.}} Tk,ttk::menubutton,TMenubutton,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::checkbutton,TCheckbutton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,ArrowButton,ArrowButton,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,ttk::entry,TEntry,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,Entry,Entry,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} BWidget,StatusBar,StatusBar,-pad {-pad pad pad 0 Listtype {1 2 pixel values} {Weighting of this item for resizing (passed to **grid** ).
Whether to use a separator for this item.
Passed on to grid.
Override of the widget's **-ipad** option for this item.}} BWidget,TitleFrame,TitleFrame,-bd {-bd borderWidth {} {} Integertype {} {}} Tk,radiobutton,Radiobutton,-offrelief {-offrelief offRelief OffRelief raised Listtype {flat groove raised ridge solid sunken} {Specifies the relief for the checkbutton when the indicator
is not drawn and the checkbutton is off. The default value is "raised". By
setting this option to "flat" and setting **-indicatoron** to false and
**-overrelief** to "raised", the effect is achieved of having a flat button
that raises on mouse-over and which is depressed when activated. This is the
behavior typically exhibited by the Align-Left, Align-Right, and Center
radiobuttons on the toolbar of a word-processor, for example.}} BWidget,Dialog,Dialog,-homogeneous {-homogeneous homogeneous homogeneous 1 Entrytype {} {Specifies whether or not the label of the pages must have the same width.}} Tk,menu,Menu,-tearoff {-tearoff tearOff TearOff 1 Listtype {True False} {**TearOff**     This option must have a proper boolean value, which specifies
whether or not the menu should include a tear-off entry at the top. If so, it
will exist as entry 0 of the menu and the other entries will number starting
at 1. The default menu bindings arrange for the menu to be torn off when the
tear-off entry is invoked. This option is ignored under Aqua/MacOS, where
menus cannot be torn off.}} BWidget,SpinBox,SpinBox,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,ttk::treeview,Treeview,-selectmode {-selectmode selectMode SelectMode extended Listtype {none browse extended} {Class: **SelectMode**     Controls how the built-in class bindings manage the
selection. One of **extended** , **browse** , or **none**.}} Tk,ttk::spinbox,TSpinbox,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} BWidget,Label,Label,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,TitleFrame,TitleFrame,-bg {-bg background {} {} Colortype {} {}} BWidget,ListBox,ListBox,-height {-height height Height 10 Integertype {} {Specifies the desired height for the listbox in units of **deltay** pixels.}} Tk,checkbutton,Checkbutton,-variable {-variable variable Variable {} Entrytype {} {Specifies the name of a global
variable to set to indicate whether or not this button is selected. Defaults
to the name of the button within its parent (i.e. the last element of the
button window's path name).}} Tk,menubutton,Menubutton,-indicatoron {-indicatoron indicatorOn IndicatorOn 0 Listtype {True False} {Class: **IndicatorOn**     The value must be a proper boolean value. If it is
true then a small indicator rectangle will be displayed on the right side of
the menubutton and the default menu bindings will treat this as an option
menubutton. If false then no indicator will be displayed.}} BWidget,Button,Button,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,scale,Scale,-showvalue {-showvalue showValue ShowValue 1 Listtype {True False} {Specifies a boolean value indicating whether or not the
current value of the scale is to be displayed.}} BWidget,StatusBar,StatusBar,-ipad {-ipad ipad ipad 1 Listtype {1 2 pixel values} {The spacing to place around individual status bar items.}} Tk,ttk::scale,TScale,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::panedwindow,TPanedwindow,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,scrollbar,Scrollbar,-elementborderwidth {-elementborderwidth elementBorderWidth BorderWidth -1 Integertype {} {Specifies the width
of borders drawn around the internal elements of the scrollbar (the two arrows
and the slider). The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this value is less than zero,
the value of the **-borderwidth** option is used in its place.}} BWidget,LabelEntry,LabelEntry,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} BWidget,ComboBox,ComboBox,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} BWidget,StatusBar,StatusBar,-width {-width width Width 100 Integertype {} {Specifies the desired width for the widget.}} Tk,text,Text,-width {-width width Width 80 Integertype {} {Specifies the desired width for the window in units of
characters in the font given by the **-font** option. If the font does not
have a uniform width then the width of the character "0" is used in
translating from character units to screen units.}} Tk,ttk::checkbutton,TCheckbutton,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,frame,Frame,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,ListBox,ListBox,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,tablelist::tablelist,Tablelist,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,radiobutton,Radiobutton,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ListBox,ListBox,-selectmode {-selectmode selectMode SelectMode none Listtype {none single multiple} {Specifies the desired selection-mode for the listbox. Must be one of **none** , **single** or **multiple**. **selectmode** _single_ allows to select 1 item by its text or image. **selectmode** _multiple_ allows to select multiple items by their text or image. For more info on selectmodes _single_ or _multiple_ , see the Tk **listbox** command. Default value for **selectmode** is _none_.}} Tk,button,Button,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,frame,Frame,-bg {-bg -background {} {} Entrytype {} {}} BWidget,ComboBox,ComboBox,-bwlistbox {-bwlistbox bwlistbox bwlistbox 0 Listtype {True False} {Specifies that the combobox should use a BWidget listbox in its drop down instead of the standard Tk option. This option is enabled by default if the **-images** option is not empty.}} BWidget,ComboBox,ComboBox,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,tablelist::tablelist,Tablelist,-stripebg {-stripebg -stripebackground {} {} Entrytype {} {}} Tk,ttk::radiobutton,TRadiobutton,-command {-command command Command {} Entrytype {} {**Command**     A Tcl script to evaluate whenever the widget is invoked.}} Tk,ttk::labelframe,TLabelframe,-relief {-relief relief Relief {} Entrytype {} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,spinbox,Spinbox,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} BWidget,SpinBox,SpinBox,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,button,Button,-bg {-bg -background {} {} Colortype {} {}} Tk,ttk::menubutton,TMenubutton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,ttk::frame,TFrame,-style {-style style Style {} Entrytype {} {}} Tk,tablelist::tablelist,Tablelist,-movecolumncursor {-movecolumncursor moveColumnCursor MoveColumnCursor icon Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,toplevel,Toplevel,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,ScrollableFrame,Canvas,-constrainedheight {-constrainedheight constrainedheight constrainedheight 0 Listtype {True False} {Specifies whether or not the scrollable area should have the same height of the scrolled window. If true, vertical scrollbar is not needed.}} Tk,entry,Entry,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} BWidget,ArrowButton,ArrowButton,-width {-width width Width 15 Integertype {} {Specifies a desired width for the ArrowButton. The value is in screen units.}} BWidget,PagesManager,Canvas,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,toplevel,Toplevel,-bg {-bg -background {} {} Entrytype {} {}} Tk,ttk::label,TLabel,-wraplength {-wraplength wrapLength WrapLength {} Entrytype {} {Specifies the maximum line length (in pixels). If
this option is less than or equal to zero, then automatic wrapping is not
performed; otherwise the text is split into lines such that no line is longer
than the specified value.}} Tk,checkbutton,Checkbutton,-selectimage {-selectimage selectImage SelectImage {} Entrytype {} {Specifies an image to display (in place of the
**-image** option) when the checkbutton is selected. This option is ignored
unless the **-image** option has been specified.}} Tk,button,Button,-height {-height height Height 0 Integertype {} {Specifies a desired height for the button. If an image or
bitmap is being displayed in the button then the value is in screen units
(i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text it is in lines of text.
If this option is not specified, the button's desired height is computed from
the size of the image or bitmap or text being displayed in it.}} Tk,canvas,Canvas,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} Tk,tablelist::tablelist,Tablelist,-arrowdisabledcolor {-arrowdisabledcolor arrowDisabledColor ArrowDisabledColor #a3a3a3 Entrytype {} {}} BWidget,ComboBox,ComboBox,-state {-state state State normal Listtype {normal disabled} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,ttk::combobox,TCombobox,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,PanelFrame,PanelFrame,-bd {-bd borderWidth {} {} Integertype {} {}} Tk,listbox,Listbox,-listvariable {-listvariable listVariable Variable {} Entrytype {} {Specifies the name of a
global variable. The value of the variable is a list to be displayed inside
the widget; if the variable value changes then the widget will automatically
update itself to reflect the new value. Attempts to assign a variable with an
invalid list value to **-listvariable** will cause an error. Attempts to unset
a variable in use as a **-listvariable** will fail but will not generate an
error.}} Tk,label,Label,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} BWidget,LabelEntry,LabelEntry,-droptypes {-droptypes droptypes droptypes {TEXT    {move {}}
        FGCOLOR {move {}}
        BGCOLOR {move {}}
        COLOR   {move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation.
Default is _LISTBOX_ITEM_ with operations **copy** and **move**.}} BWidget,SpinBox,SpinBox,-width {-width width Width 20 Integertype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} Tk,label,Label,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,PanelFrame,PanelFrame,-bg {-bg background {} {} Entrytype {} {}} Tk,text,Text,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} Tk,labelframe,Labelframe,-height {-height height Height 0 Integertype {} {Specifies the desired height for the window in any of the forms
acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this option is
less than or equal to zero then the window will not request any size at all.}} BWidget,Button,Button,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} BWidget,ListBox,ListBox,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} Tk,tablelist::tablelist,Tablelist,-labelforeground {-labelforeground labelForeground Foreground #000000 Colortype {} {}} BWidget,ArrowButton,ArrowButton,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 0 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} Tk,spinbox,Spinbox,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,ArrowButton,ArrowButton,-disarmcommand {-disarmcommand disarmcommand disarmcommand {} Entrytype {} {Specifies a Tcl command to associate with the ArrowButton when mouse button 1 is released. This command is called even if pointer is not over the ArrowButton, and always before the command specified by **command** option. It is typically used in conjuntion with **armcommand** , **repeatdelay** and **repeatinterval**.}} BWidget,Button,Button,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,SpinBox,SpinBox,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,checkbutton,Checkbutton,-offvalue {-offvalue offValue Value 0 Entrytype {} {Specifies value to store in the button's associated variable
whenever this button is deselected. Defaults to "0".}} Tk,tablelist::tablelist,Tablelist,-showseparators {-showseparators showSeparators ShowSeparators 0 Listtype {True False} {}} BWidget,Button,Button,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index of a character to underline in the label of the button. 0 corresponds to the first character of the text displayed, 1 to the next character, and so on.
The binding **< Alt- _char_ >** is automatically set on the toplevel of the
Button to call Button:: **setfocus**.}} Tk,labelframe,Labelframe,-background {-background background Background #d9d9d9 Colortype {} {Class: **Background**     This option is the same as the standard
**-background** option except that its value may also be specified as an empty
string. In this case, the widget will display no background or border, and no
colors will be consumed from its colormap for its background and border.}} BWidget,LabelFrame,LabelFrame,-height {-height height Height 0 Integertype {} {Specifies a desired height for the ArrowButton. The value is in screen units.}} BWidget,TitleFrame,TitleFrame,-fg {-fg foreground {} {} Colortype {} {}} BWidget,ComboBox,ComboBox,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,ttk::spinbox,TSpinbox,-width {-width width Width 20 Integertype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,ComboBox,ComboBox,-autocomplete {-autocomplete autocomplete autocomplete 0 Listtype {True False} {Specifies whether or not the combobox should attempt to auto-complete the value in the entry field as the user types. If true, the combobox will fill in a value that it finds in its value list as the user types into the entry.}} Tk,ttk::scale,TScale,-orient {-orient orient Orient horizontal Listtype {horizontal vertical} {Specifies which orientation whether the widget should be laid
out horizontally or vertically. Must be either **horizontal** or **vertical**
or an abbreviation of one of these.}} Tk,ttk::panedwindow,TPanedwindow,-orient {-orient orient Orient vertical Listtype {horizontal vertical} {Specifies the orientation of the window. If **vertical** ,
subpanes are stacked top-to-bottom; if **horizontal** , subpanes are stacked
left-to-right.}} Tk,spinbox,Spinbox,-readonlybackground {-readonlybackground readonlyBackground ReadonlyBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the spinbox is readonly. If this option is
the empty string, the normal background color is used.}} BWidget,LabelEntry,LabelEntry,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} Tk,scrollbar,Scrollbar,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,label,Label,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Tree,Tree,-selectfill {-selectfill selectfill selectfill 0 Listtype {True False} {If true, the selection box will be drawn across the entire tree from left-to-right instead of just around the item text.}} BWidget,Entry,Entry,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} Tk,ttk::spinbox,TSpinbox,-values {-values values Values {} Entrytype {} {**Values**     This must be a Tcl list of values. If this option is set then
this will override any range set using the **-from** , **-to** and
**-increment** options. The widget will instead use the values specified
beginning with the first value.}} Tk,ttk::radiobutton,TRadiobutton,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} BWidget,SpinBox,SpinBox,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {Entry has a command wrapper for _drag-over_ events. This command enables auto scrolling and position extraction during the _drag-over_.
If **dropovercmd** is empty, the wrapper accepts the drop if **editable**
option is true and **state** option is normal.
If **dropovercmd** is not empty, it is called with the following arguments:}} BWidget,ScrollView,Canvas,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Button,Button,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,tablelist::tablelist,Tablelist,-stripefg {-stripefg -stripeforeground {} {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-dropcmd {-dropcmd dropcmd dropcmd {} Entrytype {} {ListBox has a command wrapper for _drop_ events. This command stops auto scrolling and extract item and position.
If **dropcmd** is not empty, it is called with the following arguments:}} Tk,ttk::progressbar,TProgressbar,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,listbox,Listbox,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,button,Button,-fg {-fg -foreground {} {} Colortype {} {}} Tk,ttk::labelframe,TLabelframe,-text {-text text Text {} Entrytype {} {Specifies the text of the label.}} Tk,spinbox,Spinbox,-buttonuprelief {-buttonuprelief Button.relief Relief raised Listtype {flat groove raised ridge solid sunken} {Database Class: **Relief**     The relief to be used for the lower spin
button.}} BWidget,ComboBox,ComboBox,-postcommand {-postcommand postcommand postcommand {} Entrytype {} {Specifies a Tcl command called before the listbox of the ComboBox is mapped.}} Tk,scrollbar,Scrollbar,-command {-command command Command {} Entrytype {} {Specifies the prefix of a Tcl command to invoke to change the
view in the widget associated with the scrollbar. When a user requests a view
change by manipulating the scrollbar, a Tcl command is invoked. The actual
command consists of this option followed by additional information as
described later. This option almost always has a value such as **.t xview** or
**.t yview** , consisting of the name of a widget and either **xview** (if the
scrollbar is for horizontal scrolling) or **yview** (for vertical scrolling).
All scrollable widgets have **xview** and **yview** commands that take exactly
the additional arguments appended by the scrollbar as described in **SCROLLING
COMMANDS** below.}} Tk,listbox,Listbox,-selectmode {-selectmode selectMode SelectMode browse Entrytype {} {Specifies one of several styles for manipulating the
selection. The value of the option may be arbitrary, but the default bindings
expect it to be either **single** , **browse** , **multiple** , or
**extended** ; the default value is **browse**.}} BWidget,ComboBox,ComboBox,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,ttk::label,TLabel,-justify {-justify justify Justify {} Listtype {left right center} {**Justify**     If there are multiple lines of text, specifies how the lines
are laid out relative to one another. One of **left** , **center** , or
**right**. See also **-anchor**.}} Tk,panedwindow,Panedwindow,-handlepad {-handlepad handlePad HandlePad 8 Integertype {} {**HandlePad**     When sash handles are drawn, specifies the distance from the
top or left end of the sash (depending on the orientation of the widget) at
which to draw the handle. May be any value accepted by
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,LabelEntry,LabelEntry,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {Tree has a command wrapper for _drag-init_ events. This command refused the drag if no node is designated. In other cases:
If **draginitcmd** is empty, it returns:}} Tk,menu,Menu,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,ttk::progressbar,TProgressbar,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,menubutton,Menubutton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,MainFrame,Frame,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,Button,Button,-relief {-relief relief Relief raised Listtype {raised sunken flat ridge solid groove link} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,tablelist::tablelist,Tablelist,-itembackground {-itembackground itemBackground Background {} Colortype {} {}} Tk,listbox,Listbox,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,Label,Label,-dropcmd {-dropcmd dropcmd dropcmd {} Entrytype {} {Specifies a command to be called when drop occurs on the widget. **dropcmd** must be a command conforming to the description of the option **dropcmd** of **DropSite::[register](DropSite.html#register)**.
If **dropcmd** is empty, the command updates the label following the type of
the data:}} BWidget,ComboBox,ComboBox,-width {-width width Width 20 Integertype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} Tk,spinbox,Spinbox,-buttonbackground {-buttonbackground Button.background Background #d9d9d9 Colortype {} {Database Class: **Background**     The background color to be used for the
spin buttons.}} BWidget,ComboBox,ComboBox,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} Tk,listbox,Listbox,-bg {-bg -background {} {} Colortype {} {}} Tk,scale,Scale,-resolution {-resolution resolution Resolution 1 Floattype {} {Class: **Resolution**     A real value specifying the resolution for the
scale. If this value is greater than zero then the scale's value will always
be rounded to an even multiple of this value, as will the endpoints of the
scale. If the value is less than zero then no rounding occurs. Defaults to 1
(i.e., the value will be integral).}} BWidget,PanedWindow,PanedWindow,-side {-side side side top Entrytype {} {Specifies the side of the sash, which implies the layout: **top** or **bottom** (horizontal layout), **left** or **right** (vertical layout).}} Tk,tablelist::tablelist,Tablelist,-labelactiveforeground {-labelactiveforeground labelActiveForeground Background #000000 Colortype {} {}} BWidget,ProgressBar,ProgressBar,-variable {-variable variable variable {} Entrytype {} {Specifies the variable attached to the progress indicator. Progress indicator is updated when the value of the variable changes. If the value of the variable is negative, the progress indicator is not displayed (it is drawn flat with **background** color - usefull for ProgressDlg to make it invisible). If its value 0, progress indicator is reinitialized.}} Tk,toplevel,Toplevel,-menu {-menu menu Menu {} Entrytype {} {Specifies a menu widget to
be used as a menubar. On the Macintosh, the menubar will be displayed across
the top of the main monitor. On Microsoft Windows and all UNIX platforms, the
menu will appear across the toplevel window as part of the window dressing
maintained by the window manager.}} Tk,toplevel,Toplevel,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,scale,Scale,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} Tk,entry,Entry,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,menubutton,Menubutton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,menubutton,Menubutton,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} BWidget,Label,Label,-bd {-bd borderWidth {} {} Integertype {} {}} Tk,menubutton,Menubutton,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} Tk,ttk::radiobutton,TRadiobutton,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} Tk,menu,Menu,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Label,Label,-bg {-bg background {} {} Colortype {} {}} BWidget,PanedWindow,PanedWindow,-bg {-bg background {} {} Entrytype {} {}} Tk,ttk::label,TLabel,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,scale,Scale,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the scale: **normal** ,
**active** , or **disabled**. If the scale is disabled then the value may not
be changed and the scale will not activate. If the scale is active, the slider
is displayed using the color specified by the **-activebackground** option.}} BWidget,ComboBox,ComboBox,-dragevent {-dragevent dragevent dragevent 3 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} Tk,menubutton,Menubutton,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,listbox,Listbox,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,ttk::notebook,TNotebook,-padding {-padding padding Padding {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} BWidget,ScrollView,Canvas,-fill {-fill fill fill {} Entrytype {} {Specifies the fill color of the rectangle.}} Tk,label,Label,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,tablelist::tablelist,Tablelist,-autofinishediting {-autofinishediting autoFinishEditing AutoFinishEditing 0 Listtype {True False} {}} Tk,label,Label,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,entry,Entry,-vcmd {-vcmd -validatecommand {} {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,LabelEntry,LabelEntry,-labeltextvariable {-labeltextvariable labeltextvariable labeltextvariable {} Entrytype {} {}} Tk,button,Button,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to associate with the button. This
command is typically invoked when mouse button 1 is released over the button
window.}} Tk,checkbutton,Checkbutton,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} Tk,ttk::progressbar,TProgressbar,-style {-style style Style {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,ttk::radiobutton,TRadiobutton,-width {-width width Width {} Entrytype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} Tk,scrollbar,Scrollbar,-orient {-orient orient Orient vertical Entrytype {} {Specifies the orientation of the button box. If this option is **horizontal** (the default), buttons are added from top to bottom. If this option is **vertical** , buttons are added from left to right.}} Tk,label,Label,-bg {-bg -background {} {} Colortype {} {}} BWidget,LabelEntry,LabelEntry,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,ComboBox,ComboBox,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,checkbutton,Checkbutton,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,PanelFrame,PanelFrame,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,spinbox,Spinbox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,Entry,Entry,-editable {-editable editable editable 1 Listtype {True False} {Specifies whether the Entry is editable by the user. Equivalent to the **state** option of the Tk entry widget.}} BWidget,NoteBook,NoteBook,-side {-side side side top Listtype {top bottom} {Specifies the side where to place the label of the pages. Must be one of **top** or **bottom**.}} BWidget,ComboBox,ComboBox,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} Tk,listbox,Listbox,-activestyle {-activestyle activeStyle ActiveStyle dotbox Listtype {dotbox none underline} {Specifies the style in which to draw the active
element. This must be one of **dotbox** (show a focus ring around the active
element), **none** (no special indication of active element) or **underline**
(underline the active element). The default is **underline** on Windows, and
**dotbox** elsewhere.}} BWidget,TitleFrame,TitleFrame,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,ttk::menubutton,TMenubutton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,Tree,Tree,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,spinbox,Spinbox,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,menu,Menu,-selectcolor {-selectcolor selectColor Background #000000 Colortype {} {Class: **Background**     For menu entries that are check buttons or radio
buttons, this option specifies the color to display in the indicator when the
check button or radio button is selected.}} BWidget,ListBox,ListBox,-dragevent {-dragevent dragevent dragevent 1 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} Tk,text,Text,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,LabelFrame,LabelFrame,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} BWidget,LabelEntry,LabelEntry,-state {-state state State normal Listtype {normal disabled} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,radiobutton,Radiobutton,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,ComboBox,ComboBox,-indents {-indents indents indents {} Entrytype {} {}} Tk,ttk::labelframe,TLabelframe,-borderwidth {-borderwidth borderWidth BorderWidth {} Entrytype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,menubutton,Menubutton,-padx {-padx padX Pad 4p Integertype {} {Specifies distance between image or window and text of the items.}} Tk,listbox,Listbox,-fg {-fg -foreground {} {} Colortype {} {}} Tk,label,Label,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,ttk::label,TLabel,-compound {-compound compound Compound {} Listtype {none text image center top bottom left right} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,menubutton,Menubutton,-pady {-pady padY Pad 3p Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,ArrowButton,ArrowButton,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,radiobutton,Radiobutton,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} Tk,menubutton,Menubutton,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,ButtonBox,ButtonBox,-homogeneous {-homogeneous homogeneous homogeneous 1 Entrytype {} {Specifies wether or not buttons must have the same width for horizontal layout.}} Tk,radiobutton,Radiobutton,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} Tk,ttk::progressbar,TProgressbar,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,Entry,Entry,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} BWidget,NoteBook,NoteBook,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Background color for the tab when it is active.}} Tk,ttk::label,TLabel,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,ttk::scrollbar,TScrollbar,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,labelframe,Labelframe,-labelanchor {-labelanchor labelAnchor LabelAnchor nw Listtype {nw n ne en e es se s sw ws w  wn} {Specifies where to place the label. A label is only
displayed if the **-text** option is not the empty string. Valid values for
this option are (listing them clockwise) **nw** , **n** , **ne** , **en** ,
**e** , **es** , **se** , **s** , **sw** , **ws** , **w** and **wn**. The
default value is **nw**.}} Tk,ttk::labelframe,TLabelframe,-height {-height height Height 0 Integertype {} {**Height**     If specified, the widget's requested height in pixels. (See
_ttk::frame(n)_ for further notes on **-width** and **-height** ).}} BWidget,MainFrame,Frame,-bg {-bg background {} {} Colortype {} {}} BWidget,ComboBox,ComboBox,-editable {-editable editable editable 1 Listtype {True False} {Specifies whether the Entry is editable by the user. Equivalent to the **state** option of the Tk entry widget.}} Tk,checkbutton,Checkbutton,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,ttk::label,TLabel,-style {-style style Style {} Entrytype {} {}} BWidget,Label,Label,-fg {-fg foreground {} {} Colortype {} {}} BWidget,ComboBox,ComboBox,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,frame,Frame,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Tree,Tree,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {Tree has a command wrapper for _drag-init_ events. This command refused the drag if no node is designated. In other cases:
If **draginitcmd** is empty, it returns:}} Tk,ttk::label,TLabel,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,menubutton,Menubutton,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} Tk,ttk::spinbox,TSpinbox,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,scale,Scale,-width {-width width Width 15 Integertype {} {Specifies the desired narrow dimension of the scale in screen
units (i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ). For vertical scales this is the
scale's width; for horizontal scales this is the scale's height.}} BWidget,ComboBox,ComboBox,-command {-command command Command {} Entrytype {} {Specifies the prefix of a Tcl command to invoke whenever the
scale's value is changed via a widget command. The actual command consists of
this option followed by a space and a real number indicating the new value of
the scale.}} Tk,radiobutton,Radiobutton,-tristatevalue {-tristatevalue tristateValue TristateValue {} Entrytype {} {Specifies the value that causes the radiobutton
to display the multi-value selection, also known as the tri-state mode.
Defaults to "".}} BWidget,Button,Button,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} BWidget,PagesManager,Canvas,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,label,Label,-fg {-fg -foreground {} {} Colortype {} {}} Tk,tablelist::tablelist,Tablelist,-autoscan {-autoscan autoScan AutoScan 1 Listtype {True False} {}} Tk,ttk::combobox,TCombobox,-show {-show show Show {} Entrytype {} {A list containing zero or more of the following values, specifying which
elements of the tree to display.}} BWidget,ScrolledWindow,Frame,-managed {-managed managed managed 1 Entrytype {} {If true, scrollbar are managed during creation, so their size are included in the requested size of the ScrolledWindow. If false, they are not. Default value: **true**.}} Tk,tablelist::tablelist,Tablelist,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,ttk::scrollbar,TScrollbar,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,scale,Scale,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 300 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} BWidget,ArrowButton,ArrowButton,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ or _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,LabelEntry,LabelEntry,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} Tk,ttk::spinbox,TSpinbox,-background {-background windowColor WindowColor {} Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,labelframe,Labelframe,-visual {-visual visual Visual {} ? {} {Specifies visual information for the new window in any of the
forms accepted by **[Tk_GetVisual](../TkLib/GetVisual.htm)**. If this option
is not specified, the new window will use the same visual as its parent. The
**-visual** option may not be modified with the **configure** widget command.}} BWidget,MainFrame,Frame,-width {-width width Width 0 Integertype {} {Specifies the desired width for the user frame in any of the forms acceptable to Tk_GetPixels. If this option is less than or equal to zero (the default) then the window will not request any size at all.}} Tk,entry,Entry,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Dialog,Dialog,-padx {-padx padX Pad 10 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,button,Button,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} Tk,radiobutton,Radiobutton,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Dialog,Dialog,-pady {-pady padY Pad 1m Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,Entry,Entry,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,LabelEntry,LabelEntry,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ (the default for a NoteBook page) or _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,Tree,Tree,-width {-width width Width 20 Integertype {} {Specifies the desired width for the tree in units of 8 pixels.}} Tk,entry,Entry,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
the foreground color to use when the entry is disabled. If this option is the
empty string, the normal foreground color is used.}} BWidget,PanelFrame,PanelFrame,-panelforeground {-panelforeground panelforeground Background #000000 Colortype {} {}} Tk,frame,Frame,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,LabelEntry,LabelEntry,-width {-width width Width 20 Integertype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,Label,Label,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} Tk,ttk::progressbar,TProgressbar,-maximum {-maximum maximum Maximum 100 Floattype {} {**Maximum**     A floating point number specifying the maximum **-value**.
Defaults to 100.}} Tk,ttk::entry,TEntry,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Database Class: **InvalidCommand**     A script template to evaluate whenever
the **-validatecommand** returns 0. See **VALIDATION** below for more
information.}} BWidget,SpinBox,SpinBox,-disabledbackground {-disabledbackground disabledBackground DisabledBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the spinbox is disabled. If this option is
the empty string, the normal background color is used.}} Tk,panedwindow,Panedwindow,-sashwidth {-sashwidth sashWidth Width 3 Integertype {} {Specifies the width of each sash. May be any value accepted
by **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,ComboBox,ComboBox,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {Tree has a command wrapper for _drag-init_ events. This command refused the drag if no node is designated. In other cases:
If **draginitcmd** is empty, it returns:}} Tk,canvas,Canvas,-offset {-offset offset Offset 0,0 Entrytype {} {}} Tk,ttk::button,TButton,-compound {-compound compound Compound {} Listtype {none text image center top bottom left right} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} BWidget,LabelEntry,LabelEntry,-labeljustify {-labeljustify labeljustify Justify center Listtype {left right center} {}} Tk,toplevel,Toplevel,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,canvas,Canvas,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,entry,Entry,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,SpinBox,SpinBox,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,scrollbar,Scrollbar,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Tree,Tree,-crossfill {-crossfill crossfill Foreground #000000 Colortype {} {Specifies a foreground color for the cross bitmap.}} Tk,button,Button,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,canvas,Canvas,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,checkbutton,Checkbutton,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,Label,Label,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Button,Button,-armcommand {-armcommand armcommand armcommand {} Entrytype {} {Specifies a Tcl command to associate with the Button when mouse button 1 is pressed over the Button. When **repeatdelay** or **repeatinterval** option is positive integer, this command is repeatedly called if mouse pointer is over the Button and until mouse button 1 is released.}} BWidget,ComboBox,ComboBox,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} Tk,tablelist::tablelist,Tablelist,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,text,Text,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Button,Button,-height {-height height Height 0 Integertype {} {Specifies a desired height for the Button. If an image or bitmap is being displayed in the Button then the value is in screen units; for text it is in lines of text. If this option isn't specified, the Button's desired height is computed from the size of the image or bitmap or text being displayed in it.
Option not available when widget is _themed_.}} Tk,scale,Scale,-length {-length length Length 100 Integertype {} {Specifies the desired long dimension of the scale in screen
units (i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ). For vertical scales this is the
scale's height; for horizontal scales it is the scale's width.}} Tk,message,Message,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,LabelEntry,LabelEntry,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,ttk::combobox,TCombobox,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,panedwindow,Panedwindow,-sashpad {-sashpad sashPad SashPad 0 Integertype {} {Specifies the amount of padding to leave of each side of a
sash. May be any value accepted by **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Label,Label,-dragevent {-dragevent dragevent dragevent 1 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} Tk,tablelist::tablelist,Tablelist,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,ttk::checkbutton,TCheckbutton,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,label,Label,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,LabelFrame,LabelFrame,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,ttk::spinbox,TSpinbox,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} BWidget,Entry,Entry,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,checkbutton,Checkbutton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,ttk::entry,TEntry,-foreground {-foreground textColor TextColor {} Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,Button,Button,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,SpinBox,SpinBox,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,ttk::progressbar,TProgressbar,-mode {-mode mode ProgressMode determinate Listtype {determinate indeterminate} {One of **determinate** or **indeterminate**.}} BWidget,Button,Button,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} BWidget,PanelFrame,PanelFrame,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,StatusBar,StatusBar,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Label,Label,-state {-state state State normal Listtype {normal disabled} {Specifies one of two states for the Label: **normal** or **disabled**. In normal state the text of the Label is displayed using the **foreground** option. In disabled state the text of the Label is displayed using the **disabledforeground** option.}} Tk,menubutton,Menubutton,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ScrollableFrame,Canvas,-width {-width width Width 0 Integertype {} {Specifies the desired width for the window in pixels.}} Tk,frame,Frame,-padx {-padx padX Pad 0 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,frame,Frame,-pady {-pady padY Pad 0 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,TitleFrame,TitleFrame,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,SpinBox,SpinBox,-dragtype {-dragtype dragtype dragtype {} Entrytype {} {Specifies an alternate type of dragged object.}} BWidget,Label,Label,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} Tk,ttk::radiobutton,TRadiobutton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,LabelEntry,LabelEntry,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} Tk,ttk::button,TButton,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} BWidget,ArrowButton,ArrowButton,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,LabelFrame,LabelFrame,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,spinbox,Spinbox,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,toplevel,Toplevel,-screen {-screen screen Screen {} ? {} {Specifies the screen on which to place the new window. Any valid screen name
may be used, even one associated with a different display. Defaults to the
same screen as its parent. This option is special in that it may not be
specified via the option database, and it may not be modified with the
**configure** widget command.}} Tk,spinbox,Spinbox,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,menu,Menu,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,LabelEntry,LabelEntry,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,ComboBox,ComboBox,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,checkbutton,Checkbutton,-offrelief {-offrelief offRelief OffRelief raised Listtype {flat groove raised ridge solid sunken} {Specifies the relief for the checkbutton when the indicator
is not drawn and the checkbutton is off. The default value is "raised". By
setting this option to "flat" and setting **-indicatoron** to false and
**-overrelief** to "raised", the effect is achieved of having a flat button
that raises on mouse-over and which is depressed when activated. This is the
behavior typically exhibited by the Bold, Italic, and Underline checkbuttons
on the toolbar of a word-processor, for example.}} BWidget,MainFrame,Frame,-sizegrip {-sizegrip sizegrip sizegrip 0 Entrytype {} {If bool argument is true and themed mode, show a ttk sizegrip widget in the lower-right corner.}} Tk,spinbox,Spinbox,-wrap {-wrap wrap Wrap 0 Listtype {True False} {Must be a proper boolean value. If on, the spinbox will wrap around the values
of data in the widget.}} BWidget,LabelFrame,LabelFrame,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ (the default for a NoteBook page) or _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,checkbutton,Checkbutton,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} Tk,tablelist::tablelist,Tablelist,-instanttoggle {-instanttoggle instantToggle InstantToggle 0 Listtype {True False} {}} BWidget,ComboBox,ComboBox,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,ttk::combobox,TCombobox,-style {-style style Style {} Entrytype {} {}} BWidget,ComboBox,ComboBox,-bd {-bd borderWidth {} {} Integertype {} {}} Tk,canvas,Canvas,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,tablelist::tablelist,Tablelist,-selecttype {-selecttype selectType SelectType row Listtype {row cell} {}} BWidget,ComboBox,ComboBox,-dropcmd {-dropcmd dropcmd dropcmd {} Entrytype {} {ListBox has a command wrapper for _drop_ events. This command stops auto scrolling and extract item and position.
If **dropcmd** is not empty, it is called with the following arguments:}} Tk,menubutton,Menubutton,-height {-height height Height 0 Integertype {} {Specifies a desired height for the menubutton. If an image or
bitmap is being displayed in the menubutton then the value is in screen units
(i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text it is in lines of text.
If this option is not specified, the menubutton's desired height is computed
from the size of the image or bitmap or text being displayed in it.}} Tk,ttk::treeview,Treeview,-displaycolumns {-displaycolumns displayColumns DisplayColumns #all Entrytype {} {Database Class: **DisplayColumns**     A list of column identifiers (either
symbolic names or integer indices) specifying which data columns are displayed
and the order in which they appear, or the string **#all**. If set to **#all**
(the default), all columns are shown in the order given.}} Tk,ttk::panedwindow,TPanedwindow,-height {-height height Height 0 Integertype {} {**Height**     If present and greater than zero, specifies the desired height
of the widget in pixels. Otherwise, the requested height is determined by the
height of the managed windows.}} Tk,label,Label,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} BWidget,LabelEntry,LabelEntry,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} BWidget,ListBox,ListBox,-takefocus {-takefocus takeFocus TakeFocus 1 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::checkbutton,TCheckbutton,-width {-width width Width {} Entrytype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,ArrowButton,ArrowButton,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,menubutton,Menubutton,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,spinbox,Spinbox,-from {-from from From 0 Floattype {} {A floating-point value corresponding to the lowest value for a spinbox, to be
used in conjunction with **-to** and **-increment**. When all are specified
correctly, the spinbox will use these values to control its contents. This
value must be less than the **-to** option. If **-values** is specified, it
supersedes this option.}} BWidget,LabelEntry,LabelEntry,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} Tk,text,Text,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} Tk,ttk::checkbutton,TCheckbutton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,ArrowButton,ArrowButton,-dir {-dir dir dir top Listtype {top bottom left right} {Specifies the direction of the arrow: **top** , **bottom** , **left** or **right**.}} Tk,checkbutton,Checkbutton,-height {-height height Height 0 Integertype {} {Specifies a desired height for the button. If an image or
bitmap is being displayed in the button then the value is in screen units
(i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text it is in lines of text.
If this option is not specified, the button's desired height is computed from
the size of the image or bitmap or text being displayed in it.}} Tk,frame,Frame,-height {-height height Height 0 Integertype {} {Specifies the desired height for the window in any of the forms
acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this option is
less than or equal to zero then the window will not request any size at all.
Note that this sets the total height of the frame, any **-borderwidth** or
similar is not added. Normally **-height** should not be used if a propagating
geometry manager, such as **[grid](../TkCmd/grid.htm)** or
**[pack](../TkCmd/pack.htm)** , is used within the frame since the geometry
manager will override the height of the frame.}} BWidget,Label,Label,-width {-width width Width 0 Integertype {} {Specifies a desired width for the label. If an image or bitmap is being displayed in the label then the value is in screen units, for text it is in characters. If this option isn't specified, the label's desired width is computed from the size of the image or bitmap or text being displayed in it.}} BWidget,PanedWindow,PanedWindow,-width {-width width Width 10 Entrytype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,ListBox,ListBox,-dropovermode {-dropovermode dropovermode dropovermode wpi Entrytype {} {Specifies the type of _drop-over_ interaction. Must be a combination of **w** , which specifies that drop can occurs everywhere on widget, **p** , which specifies that drop can occurs between two items, and **i** , which specifies that drop occurs inside items.}} Tk,menu,Menu,-tearoffcommand {-tearoffcommand tearOffCommand TearOffCommand {} Entrytype {} {Database Class: **TearOffCommand**     If this option has a non-empty value,
then it specifies a Tcl command to invoke whenever the menu is torn off. The
actual command will consist of the value of this option, followed by a space,
followed by the name of the menu window, followed by a space, followed by the
name of the name of the torn off menu window. For example, if the option's
value is " **a b** " and menu **.x.y** is torn off to create a new menu
**.x.tearoff1** , then the command " **a b .x.y .x.tearoff1** " will be
invoked. This option is ignored under Aqua/MacOS, where menus cannot be torn
off.}} Tk,entry,Entry,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,Tree,Tree,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.}} BWidget,Tree,Tree,-linestipple {-linestipple linestipple Bitmap {} Entrytype {} {Specifies a stipple bitmap for the lines between nodes.}} Tk,ttk::button,TButton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,tablelist::tablelist,Tablelist,-forceeditendcommand {-forceeditendcommand forceEditEndCommand ForceEditEndCommand 0 Listtype {True False} {}} Tk,tablelist::tablelist,Tablelist,-editstartcommand {-editstartcommand editStartCommand EditStartCommand {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-dragevent {-dragevent dragevent dragevent 3 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} Tk,ttk::button,TButton,-style {-style style Style {} Entrytype {} {}} Tk,ttk::checkbutton,TCheckbutton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,canvas,Canvas,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::button,TButton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,LabelFrame,LabelFrame,-name {-name name name {} Entrytype {} {Specifies a standard name for the label. If the option *** _name_ Name** is found in the resource database, then **text** and **underline** options are extracted from its value.}} Tk,ttk::spinbox,TSpinbox,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to be invoked whenever a spinbutton is
invoked.}} BWidget,Entry,Entry,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,TitleFrame,TitleFrame,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,ttk::button,TButton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,LabelEntry,LabelEntry,-readonlybackground {-readonlybackground readonlyBackground ReadonlyBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the entry is readonly. If this option is the
empty string, the normal background color is used.}} Tk,ttk::label,TLabel,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} Tk,message,Message,-width {-width width Width 0 Integertype {} {Specifies the length of lines in the window. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If
this option has a value greater than zero then the **-aspect** option is
ignored and the **-width** option determines the line length. If this option
has a value less than or equal to zero, then the **-aspect** option determines
the line length.}} Tk,label,Label,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} BWidget,PanelFrame,PanelFrame,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,label,Label,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,MainFrame,Frame,-progressmax {-progressmax progressmax progressmax 100 Integertype {} {}} BWidget,Button,Button,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,tablelist::tablelist,Tablelist,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} Tk,radiobutton,Radiobutton,-height {-height height Height 0 Integertype {} {Specifies a desired height for the button. If an image or
bitmap is being displayed in the button then the value is in screen units
(i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text it is in lines of text.
If this option is not specified, the button's desired height is computed from
the size of the image or bitmap or text being displayed in it.}} Tk,label,Label,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,text,Text,-startline {-startline {} {} {} Entrytype {} {Specifies an integer line index representing the first line
of the underlying textual data store that should be contained in the widget.
This allows a text widget to reflect only a portion of a larger piece of text.
Instead of an integer, the empty string can be provided to this configuration
option, which will configure the widget to start at the very first line in the
textual data store.}} Tk,ttk::frame,TFrame,-width {-width width Width 0 Integertype {} {**Width**     If specified, the widget's requested width in pixels.}} BWidget,ListBox,ListBox,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,radiobutton,Radiobutton,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,menubutton,Menubutton,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,text,Text,-tabs {-tabs tabs Tabs {} Entrytype {} {Specifies a set of tab stops for the window. The option's value consists of a
list of screen distances giving the positions of the tab stops, each of which
is a distance relative to the left edge of the widget (excluding borders,
padding, etc). Each position may optionally be followed in the next list
element by one of the keywords **left** , **right** , **center** , or
**numeric** , which specifies how to justify text relative to the tab stop.
**Left** is the default; it causes the text following the tab character to be
positioned with its left edge at the tab position. **Right** means that the
right edge of the text following the tab character is positioned at the tab
position, and **center** means that the text is centered at the tab position.
**Numeric** means that the decimal point in the text is positioned at the tab
position; if there is no decimal point then the least significant digit of the
number is positioned just to the left of the tab position; if there is no
number in the text then the text is right-justified at the tab position. For
example, " **-tabs {2c left 4c 6c center}** " creates three tab stops at two-
centimeter intervals; the first two use left justification and the third uses
center justification.}} Tk,spinbox,Spinbox,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,text,Text,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,scrollbar,Scrollbar,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,ComboBox,ComboBox,-fg {-fg foreground {} {} Colortype {} {}} Tk,spinbox,Spinbox,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} Tk,spinbox,Spinbox,-bg {-bg -background {} {} Colortype {} {}} BWidget,NoteBook,NoteBook,-arcradius {-arcradius arcradius arcradius 2 Integertype {} {Specifies the amount of rounding effect at the corners of a tab. This value can be adjusted from 0 to 8 pixels with the default being 2 pixels. Usually, small values are preferable.}} BWidget,SpinBox,SpinBox,-droptypes {-droptypes droptypes droptypes {TEXT    {move {}}
        FGCOLOR {move {}}
        BGCOLOR {move {}}
        COLOR   {move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation.
Default is _LISTBOX_ITEM_ with operations **copy** and **move**.}} Tk,listbox,Listbox,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,scrollbar,Scrollbar,-bg {-bg background {} {} Colortype {} {}} Tk,radiobutton,Radiobutton,-overrelief {-overrelief overRelief OverRelief {} Entrytype {} {Specifies an alternative relief for the radiobutton,
to be used when the mouse cursor is over the widget. This option can be used
to make toolbar buttons, by configuring **-relief flat -overrelief raised**.
If the value of this option is the empty string, then no alternative relief is
used when the mouse cursor is over the radiobutton. The empty string is the
default value.}} BWidget,ListBox,ListBox,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} Tk,entry,Entry,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Label,Label,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ or _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,ScrollableFrame,Canvas,-areawidth {-areawidth areawidth areawidth 0 Integertype {} {Specifies the width for the scrollable area. If zero, then the width of the scrollable area window is made just large enough to hold all its children.}} Tk,spinbox,Spinbox,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,menu,Menu,-activeborderwidth {-activeborderwidth activeBorderWidth BorderWidth 1 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border drawn around active elements. See above for
definition of active elements. The value may have any of the forms acceptable
to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. This option is typically only
available in widgets displaying more than one element at a time (e.g. menus
but not buttons).}} BWidget,LabelEntry,LabelEntry,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} BWidget,ScrolledWindow,Frame,-scrollbar {-scrollbar scrollbar scrollbar both Listtype {none both vertical horizontal} {Specifies the desired scrollbar: **none** , **horizontal** , **vertical** or **both** (default value).}} Tk,text,Text,-spacing1 {-spacing1 spacing1 Spacing 0 Integertype {} {**Spacing1**     Requests additional space above each text line in the widget,
using any of the standard forms for screen distances. If a line wraps, this
option only applies to the first line on the display. This option may be
overridden with **-spacing1** options in tags.}} Tk,text,Text,-spacing2 {-spacing2 spacing2 Spacing 0 Integertype {} {**Spacing2**     For lines that wrap (so that they cover more than one line on
the display) this option specifies additional space to provide between the
display lines that represent a single line of text. The value may have any of
the standard forms for screen distances. This option may be overridden with
**-spacing2** options in tags.}} BWidget,ListBox,ListBox,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,text,Text,-spacing3 {-spacing3 spacing3 Spacing 0 Integertype {} {**Spacing3**     Requests additional space below each text line in the widget,
using any of the standard forms for screen distances. If a line wraps, this
option only applies to the last line on the display. This option may be
overridden with **-spacing3** options in tags.}} Tk,tablelist::tablelist,Tablelist,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,labelframe,Labelframe,-colormap {-colormap colormap Colormap {} ? {} {Specifies a colormap to use for the window. The value may be
either **new** , in which case a new colormap is created for the window and
its children, or the name of another window (which must be on the same screen
and have the same visual as _pathName_ ), in which case the new window will
use the colormap from the specified window. If the **-colormap** option is not
specified, the new window uses the same colormap as its parent. This option
may not be changed with the **configure** widget command.}} BWidget,ScrollView,Canvas,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,NoteBook,NoteBook,-foreground {-foreground foreground Foreground #000000 Colortype {} {Color used for the tab's text when the tab is neither active nor disabled.}} Tk,tablelist::tablelist,Tablelist,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,Label,Label,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,ttk::spinbox,TSpinbox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} Tk,label,Label,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,tablelist::tablelist,Tablelist,-labelbackground {-labelbackground labelBackground Background #d9d9d9 Colortype {} {}} Tk,spinbox,Spinbox,-activebackground {-activebackground activeBackground Background #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} Tk,labelframe,Labelframe,-labelwidget {-labelwidget labelWidget LabelWidget {} Entrytype {} {Specifies a widget to use as label. This overrides
any **-text** option. The widget must exist before being used as
**-labelwidget** and if it is not a descendant of this window, it will be
raised above it in the stacking order.}} Tk,ttk::menubutton,TMenubutton,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} BWidget,SpinBox,SpinBox,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,scrollbar,Scrollbar,-troughcolor {-troughcolor troughColor Background #b3b3b3 Colortype {} {Specifies the color to use for the rectangular
trough areas in widgets such as scrollbars and scales. This option is ignored
for scrollbars on Windows (native widget does not recognize this option).}} BWidget,ComboBox,ComboBox,-values {-values values values {} Entrytype {} {Specifies the values to display in the listbox of the ComboBox.}} Tk,entry,Entry,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,NoteBook,NoteBook,-homogeneous {-homogeneous homogeneous homogeneous 0 Listtype {True False} {Specifies whether or not the label of the pages must have the same width.}} Tk,entry,Entry,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,tablelist::tablelist,Tablelist,-colorizecommand {-colorizecommand colorizeCommand ColorizeCommand {} Entrytype {} {}} Tk,ttk::entry,TEntry,-show {-show show Show {} Entrytype {} {If this option is specified, then the true contents of the entry are not
displayed in the window. Instead, each character in the entry's value will be
displayed as the first character in the value of this option, such as "*" or a
bullet. This is useful, for example, if the entry is to be used to enter a
password. If characters in the entry are selected and copied elsewhere, the
information copied will be what is displayed, not the true contents of the
entry.}} BWidget,ComboBox,ComboBox,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,text,Text,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} Tk,text,Text,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} Tk,radiobutton,Radiobutton,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,Entry,Entry,-readonlybackground {-readonlybackground readonlyBackground ReadonlyBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the entry is readonly. If this option is the
empty string, the normal background color is used.}} BWidget,LabelEntry,LabelEntry,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,menubutton,Menubutton,-width {-width width Width 0 Integertype {} {Specifies a desired width for the menubutton. If an image or
bitmap is being displayed in the menubutton then the value is in screen units
(i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text it is in characters. If
this option is not specified, the menubutton's desired width is computed from
the size of the image or bitmap or text being displayed in it.}} Tk,listbox,Listbox,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,ArrowButton,ArrowButton,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,spinbox,Spinbox,-fg {-fg -foreground {} {} Colortype {} {}} Tk,frame,Frame,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Entry,Entry,-state {-state state State normal Listtype {normal disabled} {Specifies one of two states for the Entry: **normal** or **disabled**. In normal state the text of the Entry is displayed using the **foreground** option. In disabled state the text of the Entry is displayed using the **disabledforeground** option. If the entry is disabled then the value may not be changed by user input and no insertion cursor will be displayed, even if the input focus is in the widget. Disabled state is the same as not editable with visual effect.}} BWidget,Label,Label,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,StatusBar,StatusBar,-showresize {-showresize showresize showresize 1 Listtype {True False} {Specifies whether to show the corner resize control.}} BWidget,SpinBox,SpinBox,-command {-command command Command {} Entrytype {} {Specifies the prefix of a Tcl command to invoke whenever the
scale's value is changed via a widget command. The actual command consists of
this option followed by a space and a real number indicating the new value of
the scale.}} Tk,tablelist::tablelist,Tablelist,-xmousewheelwindow {-xmousewheelwindow xMouseWheelWindow MouseWheelWindow {} Entrytype {} {}} BWidget,Button,Button,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to associate with the Button. This command is typically invoked when mouse button 1 is released over the Button window.}} BWidget,ComboBox,ComboBox,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} BWidget,Button,Button,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 0 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} BWidget,PanelFrame,PanelFrame,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,spinbox,Spinbox,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
the foreground color to use when the spinbox is disabled. If this option is
the empty string, the normal foreground color is used.}} Tk,spinbox,Spinbox,-buttondownrelief {-buttondownrelief Button.relief Relief raised Listtype {flat groove raised ridge solid sunken} {Database Class: **Relief**     The relief to be used for the upper spin
button.}} Tk,listbox,Listbox,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} Tk,ttk::notebook,TNotebook,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,radiobutton,Radiobutton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,Dialog,Dialog,-class {-class class Class Dialog Entrytype {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} BWidget,Button,Button,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} BWidget,Entry,Entry,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,LabelEntry,LabelEntry,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,Tree,Tree,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,canvas,Canvas,-scrollregion {-scrollregion scrollRegion ScrollRegion {} Entrytype {} {Specifies a list with four coordinates describing
the left, top, right, and bottom coordinates of a rectangular region. This
region is used for scrolling purposes and is considered to be the boundary of
the information in the canvas. Each of the coordinates may be specified in any
of the forms given in the **COORDINATES** section below.}} Tk,tablelist::tablelist,Tablelist,-labelactivebackground {-labelactivebackground labelActiveBackground Foreground #ececec Colortype {} {}} Tk,ttk::label,TLabel,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,spinbox,Spinbox,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to an empty string
disables this feature (the default). The best use of this option is to set it
to _bell_. See **VALIDATION** below for more information.}} BWidget,LabelEntry,LabelEntry,-bg {-bg background {} {} Colortype {} {}} Tk,labelframe,Labelframe,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,Label,Label,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,canvas,Canvas,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} Tk,ttk::menubutton,TMenubutton,-style {-style style Style {} Entrytype {} {}} Tk,ttk::labelframe,TLabelframe,-underline {-underline underline Underline -1 Integertype {} {**Underline**     If set, specifies the integer index (0-based) of a character
to underline in the text string. The underlined character is used for mnemonic
activation. Mnemonic activation for a **ttk::labelframe** sets the keyboard
focus to the first child of the **ttk::labelframe** widget.}} Tk,ttk::menubutton,TMenubutton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,text,Text,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} Tk,spinbox,Spinbox,-buttoncursor {-buttoncursor Button.cursor Cursor {} Entrytype {} {Class: **Cursor**     The cursor to be used when over the spin buttons. If
this is empty (the default), a default cursor will be used.}} Tk,menubutton,Menubutton,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,listbox,Listbox,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,ttk::scale,TScale,-variable {-variable variable Variable {} Entrytype {} {Specifies the name of a global variable to link to the scale.
Whenever the value of the variable changes, the scale will update to reflect
this value. Whenever the scale is manipulated interactively, the variable will
be modified to reflect the scale's new value.}} Tk,listbox,Listbox,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,canvas,Canvas,-height {-height height Height 7c Integertype {} {Specifies a desired window height that the canvas widget should
request from its geometry manager. The value may be specified in any of the
forms described in the **COORDINATES** section below.}} Tk,text,Text,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,SpinBox,SpinBox,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} Tk,menubutton,Menubutton,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,tablelist::tablelist,Tablelist,-itembg {-itembg -itembackground {} {} Entrytype {} {}} Tk,ttk::progressbar,TProgressbar,-orient {-orient orient Orient horizontal Listtype {horizontal vertical} {Specifies the
orientation of the progress bar.}} Tk,listbox,Listbox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,Separator,Separator,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,SpinBox,SpinBox,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,ScrollView,Canvas,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,LabelEntry,LabelEntry,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,ttk::menubutton,TMenubutton,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} Tk,spinbox,Spinbox,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 100 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} BWidget,Button,Button,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,ScrollView,Canvas,-bg {-bg background {} {} Colortype {} {}} BWidget,PagesManager,Canvas,-width {-width width Width 0 Integertype {} {Specifies the desired width for the pages. If this option is equal to zero (the default) then the window will not request any size at all. In this case, user may want to call PagesManager:: **compute_size** to make PagesManager larger enough to contains the largest page.}} BWidget,ComboBox,ComboBox,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,tablelist::tablelist,Tablelist,-fullseparators {-fullseparators fullSeparators FullSeparators 0 Listtype {True False} {}} Tk,ttk::combobox,TCombobox,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} Tk,scale,Scale,-bigincrement {-bigincrement bigIncrement BigIncrement 0 Floattype {} {Class: **BigIncrement**     Some interactions with the scale cause its value
to change by "large" increments; this option specifies the size of the large
increments. If specified as 0, the large increments default to 1/10 the range
of the scale.}} BWidget,TitleFrame,TitleFrame,-ipad {-ipad ipad ipad 4 Integertype {} {Specifies a pad between the border of the frame and the user frame. The value is in screen units.}} Tk,ttk::combobox,TCombobox,-foreground {-foreground textColor TextColor {} Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,Button,Button,-name {-name name name {} Entrytype {} {Specifies a standard name for the button. If the option *** _name_ Name** is found in the resources database, then **text** and **underline** options are extracted from its value.}} BWidget,Button,Button,-bg {-bg background {} {} Colortype {} {}} Tk,ttk::label,TLabel,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,NoteBook,NoteBook,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 0 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} Tk,text,Text,-tabstyle {-tabstyle tabStyle TabStyle tabular Listtype {tabular wordprocessor} {Specifies how to interpret the relationship between tab stops
on a line and tabs in the text of that line. The value must be **tabular**
(the default) or **wordprocessor**. Note that tabs are interpreted as they are
encountered in the text. If the tab style is **tabular** then the _n_ 'th tab
character in the line's text will be associated with the _n_ 'th tab stop
defined for that line. If the tab character's x coordinate falls to the right
of the _n_ 'th tab stop, then a gap of a single space will be inserted as a
fallback. If the tab style is **wordprocessor** then any tab character being
laid out will use (and be defined by) the first tab stop to the right of the
preceding characters already laid out on that line. The value of the
**-tabstyle** option may be overridden by **-tabstyle** options in tags.}} Tk,frame,Frame,-visual {-visual visual Visual {} ? {} {Specifies visual information for the new window in any of the
forms accepted by **[Tk_GetVisual](../TkLib/GetVisual.htm)**. If this option
is not specified, the new window will use the same visual as its parent. The
**-visual** option may not be modified with the **configure** widget command.}} Tk,spinbox,Spinbox,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,Entry,Entry,-width {-width width Width 20 Integertype {} {Specifies an integer value indicating the desired width of the entry window, in average-size characters of the widget's font. If the value is less than or equal to zero, the widget picks a size just large enough to hold its current text.}} BWidget,Entry,Entry,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} Tk,button,Button,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,ttk::labelframe,TLabelframe,-labelanchor {-labelanchor labelAnchor LabelAnchor nw Listtype {nw n ne en e es se s sw ws w  wn} {Specifies where to place the label. Allowed values
are (clockwise from the top upper left corner): **nw** , **n** , **ne** ,
**en** , **e** , **es** , **se** , **s** , **sw** , **ws** , **w** and **wn**.
The default value is theme-dependent.}} BWidget,LabelEntry,LabelEntry,-invcmd {-invcmd invalidCommand {} {} Entrytype {} {}} Tk,spinbox,Spinbox,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,ttk::radiobutton,TRadiobutton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,panedwindow,Panedwindow,-handlesize {-handlesize handleSize HandleSize 8 Integertype {} {Specifies the side length of a sash handle. Handles
are always drawn as squares. May be any value accepted by
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,checkbutton,Checkbutton,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} BWidget,MainFrame,Frame,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,Dialog,Dialog,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,tablelist::tablelist,Tablelist,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,Label,Label,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,tablelist::tablelist,Tablelist,-selectmode {-selectmode selectMode SelectMode browse Entrytype {} {Specifies one of several styles for manipulating the
selection. The value of the option may be arbitrary, but the default bindings
expect it to be either **single** , **browse** , **multiple** , or
**extended** ; the default value is **browse**.}} Tk,ttk::combobox,TCombobox,-values {-values values Values {} Entrytype {} {Specifies the list of values to display in the drop-down
listbox.}} BWidget,Label,Label,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,PanelFrame,PanelFrame,-height {-height height Height 0 Integertype {} {Specifies a desired height for the ArrowButton. The value is in screen units.}} BWidget,LabelEntry,LabelEntry,-fg {-fg foreground {} {} Colortype {} {}} BWidget,LabelEntry,LabelEntry,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,entry,Entry,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} Tk,button,Button,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the button: **normal** ,
**active** , or **disabled**. In normal state the button is displayed using
the **-foreground** and **-background** options. The active state is typically
used when the pointer is over the button. In active state the button is
displayed using the **-activeforeground** and **-activebackground** options.
Disabled state means that the button should be insensitive: the default
bindings will refuse to activate the widget and will ignore mouse button
presses. In this state the **-disabledforeground** and **-background** options
determine how the button is displayed.}} BWidget,Button,Button,-overrelief {-overrelief overRelief OverRelief {} Entrytype {} {Specifies an alternative relief for the button, to
be used when the mouse cursor is over the widget. This option can be used to
make toolbar buttons, by configuring **-relief flat -overrelief raised**. If
the value of this option is the empty string, then no alternative relief is
used when the mouse cursor is over the button. The empty string is the default
value.}} BWidget,LabelEntry,LabelEntry,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} Tk,ttk::label,TLabel,-width {-width width Width {} Entrytype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,SpinBox,SpinBox,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this page. See also [DynamicHelp](DynamicHelp.html).}} Tk,tablelist::tablelist,Tablelist,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,ProgressBar,ProgressBar,-orient {-orient orient Orient horizontal Entrytype {} {Specifies the orientation of the button box. If this option is **horizontal** (the default), buttons are added from top to bottom. If this option is **vertical** , buttons are added from left to right.}} BWidget,Label,Label,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {Specifies a command to be called when drag icon is over the widget. **dropovercmd** must be a command conforming to the description of the option **dropovercmd** of **DropSite::[register](DropSite.html#register)**.
If **dropovercmd** is empty, Label always accepts the drop if data type is
_FGCOLOR_ , _COLOR_ , _BGCOLOR_ , and accepts all other data type only if
**state** is normal.}} BWidget,Tree,Tree,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,spinbox,Spinbox,-values {-values values Values {} Entrytype {} {**Values**     Must be a proper list value. If specified, the spinbox will use
these values as to control its contents, starting with the first value. This
option has precedence over the **-from** and **-to** range.}} Tk,text,Text,-autoseparators {-autoseparators autoSeparators AutoSeparators 1 Listtype {True False} {Specifies a boolean that says whether
separators are automatically inserted in the undo stack. Only meaningful when
the **-undo** option is true.}} Tk,text,Text,-endline {-endline {} {} {} Entrytype {} {Specifies an integer line index representing the line of the
underlying textual data store that should be just after the last line
contained in the widget. This allows a text widget to reflect only a portion
of a larger piece of text. Instead of an integer, the empty string can be
provided to this configuration option, which will configure the widget to end
at the very last line in the textual data store.}} BWidget,Entry,Entry,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,ComboBox,ComboBox,-disabledbackground {-disabledbackground disabledBackground DisabledBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the spinbox is disabled. If this option is
the empty string, the normal background color is used.}} BWidget,LabelFrame,LabelFrame,-side {-side side side left Entrytype {} {Specifies where to position the Label relative to the user frame: **top** , **bottom** , **left** or **right**.}} Tk,listbox,Listbox,-setgrid {-setgrid setGrid SetGrid 0 Listtype {True False} {Specifies a boolean value that determines whether this widget
controls the resizing grid for its top-level window. This option is typically
used in text widgets, where the information in the widget has a natural size
(the size of a character) and it makes sense for the window's dimensions to be
integral numbers of these units. These natural window sizes form a grid. If
the **-setgrid** option is set to true then the widget will communicate with
the window manager so that when the user interactively resizes the top-level
window that contains the widget, the dimensions of the window will be
displayed to the user in grid units and the window size will be constrained to
integral numbers of grid units. See the section **GRIDDED GEOMETRY
MANAGEMENT** in the **[wm](../TkCmd/wm.htm)** manual entry for more details.}} BWidget,Entry,Entry,-bg {-bg background {} {} Colortype {} {}} Tk,spinbox,Spinbox,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,ScrollView,Canvas,-window {-window window window {} Entrytype {} {Specifies the window to view. This widget must have **-xscrollcommand** and **-yscrollcommand** options, and respond to **xview** and **yview** command. In order to make ScrollView working with other scrollbar, **-xscrollcommand** and **-yscrollcommand** options of the widget must be set before the widget is passed to the **-window** option of the ScrollView (for example, if the widget is handled by a ScrolledWindow, call **setwidget** before setting **-window** option).}} BWidget,ListBox,ListBox,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,button,Button,-padx {-padx padX Pad 3m Integertype {} {Specifies distance between image or window and text of the items.}} Tk,button,Button,-pady {-pady padY Pad 1m Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,LabelEntry,LabelEntry,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} BWidget,ListBox,ListBox,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,Button,Button,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the Button: **normal** , **active** , or **disabled**. In normal state the Button is displayed using the **foreground** and **background** options. The active state is typically used when the pointer is over the Button. In active state the Button is displayed using the **activeforeground** and **activebackground** options. Disabled state means that the Button should be insensitive: the default bindings will refuse to activate the widget and will ignore mouse button presses. In this state the **disabledforeground** and **background** options determine how the Button is displayed.}} BWidget,ScrollView,Canvas,-fg {-fg foreground {} {} Entrytype {} {}} BWidget,ListBox,ListBox,-bg {-bg background {} {} Colortype {} {}} Tk,entry,Entry,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,checkbutton,Checkbutton,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,Button,Button,-fg {-fg foreground {} {} Colortype {} {}} Tk,text,Text,-inactiveselectbackground {-inactiveselectbackground inactiveSelectBackground Foreground #c3c3c3 Colortype {} {Specifies the
colour to use for the selection (the **sel** tag) when the window does not
have the input focus. If empty, **{}** , then no selection is shown when the
window does not have the focus.}} BWidget,Button,Button,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 0 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} BWidget,Button,Button,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this widget. See also [DynamicHelp](DynamicHelp.html).}} Tk,entry,Entry,-bg {-bg -background {} {} Colortype {} {}} Tk,ttk::combobox,TCombobox,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} BWidget,ScrollView,Canvas,-height {-height height Height 30 Integertype {} {Specifies the desired height for the ScrollView.}} BWidget,SpinBox,SpinBox,-invcmd {-invcmd invalidCommand {} {} Entrytype {} {}} Tk,tablelist::tablelist,Tablelist,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,tablelist::tablelist,Tablelist,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,label,Label,-height {-height height Height 0 Integertype {} {Specifies a desired height for the label. If an image or bitmap
is being displayed in the label then the value is in screen units (i.e. any of
the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text
it is in lines of text. If this option is not specified, the label's desired
height is computed from the size of the image or bitmap or text being
displayed in it.}} BWidget,ScrollableFrame,Canvas,-height {-height height Height 0 Integertype {} {Specifies the desired height for the window in pixels.}} Tk,ttk::menubutton,TMenubutton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} BWidget,Entry,Entry,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,button,Button,-overrelief {-overrelief overRelief OverRelief {} Entrytype {} {Specifies an alternative relief for the button, to
be used when the mouse cursor is over the widget. This option can be used to
make toolbar buttons, by configuring **-relief flat -overrelief raised**. If
the value of this option is the empty string, then no alternative relief is
used when the mouse cursor is over the button. The empty string is the default
value.}} Tk,ttk::scrollbar,TScrollbar,-orient {-orient orient Orient vertical Listtype {horizontal vertical} {Specifies the
orientation of the scrollbar.}} Tk,entry,Entry,-disabledbackground {-disabledbackground disabledBackground DisabledBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the entry is disabled. If this option is the
empty string, the normal background color is used.}} BWidget,PanelFrame,PanelFrame,-panelbackground {-panelbackground panelbackground Foreground #c3c3c3 Colortype {} {}} Tk,tablelist::tablelist,Tablelist,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,ttk::checkbutton,TCheckbutton,-command {-command command Command {} Entrytype {} {**Command**     A Tcl script to execute whenever the widget is invoked.}} BWidget,SpinBox,SpinBox,-dropcmd {-dropcmd dropcmd dropcmd {} Entrytype {} {ListBox has a command wrapper for _drop_ events. This command stops auto scrolling and extract item and position.
If **dropcmd** is not empty, it is called with the following arguments:}} BWidget,ArrowButton,ArrowButton,-type {-type type type button Listtype {arrow button} {Determines the type of the ArrowButton: **button** for standard button look, or **arrow** scrollbar's arrow look.}} BWidget,MainFrame,Frame,-menu {-menu menu menu {} Entrytype {} {This option describes the menu. This is a list whose each five elements describe one cascade menu. It has the following form: { _menuname_ _tags_ _menuId_ _tearoff_ _menuentries_...} where _menuentries_ is a list where each element describe one menu entry, which can be:}} BWidget,ComboBox,ComboBox,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,menu,Menu,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,spinbox,Spinbox,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,Button,Button,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,LabelFrame,LabelFrame,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} Tk,menu,Menu,-bg {-bg -background {} {} Colortype {} {}} Tk,entry,Entry,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,Dialog,Dialog,-spacing {-spacing spacing spacing 10 Integertype {} {Specifies the default spacing between buttons. This value can be changed before each call to **add**.}} BWidget,ListBox,ListBox,-padx {-padx padX Pad 20 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,label,Label,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} Tk,ttk::scale,TScale,-value {-value value Value 0 Floattype {} {Specifies the current floating-point value of the variable. If
**-variable** is set to an existing variable, specifying **-value** has no
effect (the variable value takes precedence).}} Tk,label,Label,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,button,Button,-width {-width width Width 0 Integertype {} {Specifies a desired width for the button. If an image or bitmap
is being displayed in the button then the value is in screen units (i.e. any
of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)** ). For a
text button (no image or with **-compound none** ) then the width specifies
how much space in characters to allocate for the text label. If the width is
negative then this specifies a minimum width. If this option is not specified,
the button's desired width is computed from the size of the image or bitmap or
text being displayed in it.}} Tk,canvas,Canvas,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,tablelist::tablelist,Tablelist,-treestyle {-treestyle treeStyle TreeStyle gtk Listtype {adwaita ambiance aqua aqua11 arc baghira bicolor100 bicolor125 bicolor150 bicolor175 bicolor200 blueMenta classic100 classic125 classic150 classic175 classic200 dust dustSand gtk klearlooks mate menta mint mint2 newWave oxygen1 oxygen2 phase plain100 plain125 plain150 plain175 plain200 plastik plastique radiance ubuntu ubuntu2 ubuntu3 ubuntuMate vistaAero vistaClassic white100 white125 white150 white175 white200 win7Aero win7Classic win10 winnative winxpBlue winxpOlive winxpSilver yuyo} {}} Tk,listbox,Listbox,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ProgressBar,ProgressBar,-idle {-idle idle idle 0 Listtype {True False} {}} BWidget,Tree,Tree,-linesfill {-linesfill linesfill Foreground #000000 Colortype {} {Specifies a foreground color for the lines between nodes.}} Tk,ttk::sizegrip,TSizegrip,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,ComboBox,ComboBox,-height {-height height Height 0 Integertype {} {Specifies the desired height for the window, in lines. If zero or less, then the desired height for the window is made just large enough to hold all the elements in the listbox.}} Tk,radiobutton,Radiobutton,-value {-value value Value {} Entrytype {} {Specifies value to store in the button's associated variable
whenever this button is selected.}} Tk,spinbox,Spinbox,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,tablelist::tablelist,Tablelist,-stretch {-stretch stretch Stretch {} Entrytype {} {}} Tk,ttk::checkbutton,TCheckbutton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,label,Label,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,ttk::combobox,TCombobox,-state {-state state State normal Entrytype {} {**State**     One of **normal** , **readonly** , or **disabled**. In the
**readonly** state, the value may not be edited directly, and the user can
only select one of the **-values** from the dropdown list. In the **normal**
state, the text field is directly editable. In the **disabled** state, no
interaction is possible.}} Tk,spinbox,Spinbox,-state {-state state State normal Listtype {disabled normal readonly} {Specifies one of three states for the spinbox: **normal** ,
**disabled** , or **readonly**. If the spinbox is readonly, then the value may
not be changed using widget commands and no insertion cursor will be
displayed, even if the input focus is in the widget; the contents of the
widget may still be selected. If the spinbox is disabled, the value may not be
changed, no insertion cursor will be displayed, the contents will not be
selectable, and the spinbox may be displayed in a different color, depending
on the values of the **-disabledforeground** and **-disabledbackground**
options.}} Tk,menubutton,Menubutton,-menu {-menu menu Menu {} Entrytype {} {Specifies the path name of the menu
associated with this menubutton. The menu must be a child of the menubutton.}} BWidget,Entry,Entry,-fg {-fg foreground {} {} Colortype {} {}} BWidget,Dialog,Dialog,-anchor {-anchor anchor Anchor c Entrytype {} {Specifies the anchor point of the ButtonBox. Must be one of **w** , **e** , **n** , **s** or **c**. If **side** option is set to _top_ or _bottom_ , **anchor** values _n_ , _s_ and _c_ have the same effect. If **side** option is set to _left_ or _right_ , **anchor** values _w_ , _e_ and _c_ have the same effect.}} Tk,labelframe,Labelframe,-padx {-padx padX Pad 0 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,labelframe,Labelframe,-pady {-pady padY Pad 0 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,Dialog,Dialog,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} Tk,toplevel,Toplevel,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,ArrowButton,ArrowButton,-troughcolor {-troughcolor troughColor Background #b3b3b3 Colortype {} {Specifies the color to use for the rectangular
trough areas in widgets such as scrollbars and scales. This option is ignored
for scrollbars on Windows (native widget does not recognize this option).}} BWidget,Entry,Entry,-vcmd {-vcmd validateCommand {} {} Entrytype {} {}} BWidget,ComboBox,ComboBox,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} BWidget,ListBox,ListBox,-fg {-fg foreground {} {} Colortype {} {}} BWidget,Button,Button,-width {-width width Width 0 Integertype {} {If an image or bitmap is being displayed in the Button then the value is in screen units; for text it is in characters. If this option isn't specified, the Button's desired width is computed from the size of the image or bitmap or text being displayed in it.}} BWidget,LabelFrame,LabelFrame,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,SpinBox,SpinBox,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,radiobutton,Radiobutton,-tristateimage {-tristateimage tristateImage TristateImage {} Entrytype {} {Specifies an image to display (in place
of the **-image** option) when the radiobutton is selected. This option is
ignored unless the **-image** option has been specified.}} Tk,entry,Entry,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,Entry,Entry,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} BWidget,Entry,Entry,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,label,Label,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,button,Button,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,entry,Entry,-show {-show show Show {} Entrytype {} {If this option is specified, then the true contents of the entry are not
displayed in the window. Instead, each character in the entry's value will be
displayed as the first character in the value of this option, such as "*".
This is useful, for example, if the entry is to be used to enter a password.
If characters in the entry are selected and copied elsewhere, the information
copied will be what is displayed, not the true contents of the entry.}} BWidget,LabelEntry,LabelEntry,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,ttk::entry,TEntry,-background {-background windowColor WindowColor {} Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,spinbox,Spinbox,-vcmd {-vcmd -validatecommand {} {} Entrytype {} {}} Tk,message,Message,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,text,Text,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,ProgressBar,ProgressBar,-maximum {-maximum maximum maximum 100 Integertype {} {Specifies the maximum value of the variable. This value must be greater than zero.}} Tk,tablelist::tablelist,Tablelist,-listvariable {-listvariable listVariable Variable {} Entrytype {} {Specifies the name of a
global variable. The value of the variable is a list to be displayed inside
the widget; if the variable value changes then the widget will automatically
update itself to reflect the new value. Attempts to assign a variable with an
invalid list value to **-listvariable** will cause an error. Attempts to unset
a variable in use as a **-listvariable** will fail but will not generate an
error.}} Tk,ttk::button,TButton,-command {-command command Command {} Entrytype {} {**Command**     A script to evaluate when the widget is invoked.}} BWidget,ProgressBar,ProgressBar,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,listbox,Listbox,-height {-height height Height 10 Integertype {} {Specifies the desired height for the window, in lines. If zero
or less, then the desired height for the window is made just large enough to
hold all the elements in the listbox.}} Tk,toplevel,Toplevel,-class {-class class Class Toplevel ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,ttk::button,TButton,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,button,Button,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,label,Label,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} BWidget,Label,Label,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,menu,Menu,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,MainFrame,Frame,-idle {-idle idle idle 0 Listtype {True False} {}} Tk,listbox,Listbox,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,TitleFrame,TitleFrame,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,ttk::separator,TSeparator,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,Label,Label,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,SpinBox,SpinBox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,ButtonBox,ButtonBox,-spacing {-spacing spacing spacing 10 Integertype {} {Specifies the default spacing between buttons. This value can be changed before each call to **add**.}} Tk,spinbox,Spinbox,-to {-to to To 0 Floattype {} {floating-point value corresponding to the highest value for the spinbox, to be
used in conjunction with **-from** and **-increment**. When all are specified
correctly, the spinbox will use these values to control its contents. This
value must be greater than the **-from** option. If **-values** is specified,
it supersedes this option.}} BWidget,ScrolledWindow,Frame,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Tree,Tree,-droptypes {-droptypes droptypes droptypes {TREE_NODE {copy {} move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation.
Default is _TREE_NODE_ with operations **copy** and **move**.}} Tk,ttk::scrollbar,TScrollbar,-command {-command command Command {} Entrytype {} {**Command**     A Tcl script prefix to evaluate to change the view in the
widget associated with the scrollbar. Additional arguments are appended to the
value of this option, as described in **SCROLLING COMMANDS** below, whenever
the user requests a view change by manipulating the scrollbar.}} Tk,ttk::notebook,TNotebook,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,tablelist::tablelist,Tablelist,-showeditcursor {-showeditcursor showEditCursor ShowEditCursor 1 Listtype {True False} {}} Tk,ttk::combobox,TCombobox,-width {-width width Width 20 Integertype {} {Specifies an integer value indicating the desired width of the
entry window, in average-size characters of the widget's font.}} Tk,message,Message,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,spinbox,Spinbox,-width {-width width Width 20 Integertype {} {Specifies an integer value indicating the desired width of the
spinbox window, in average-size characters of the widget's font. If the value
is less than or equal to zero, the widget picks a size just large enough to
hold its current text.}} Tk,entry,Entry,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} Tk,ttk::entry,TEntry,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Database Class: **ExportSelection**     A boolean value specifying whether or
not a selection in the widget should be linked to the X selection. If the
selection is exported, then selecting in the widget deselects the current X
selection, selecting outside the widget deselects any widget selection, and
the widget will respond to selection retrieval requests when it has a
selection.}} Tk,text,Text,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} BWidget,ListBox,ListBox,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {ListBox has a command wrapper for _drag-init_ events. This command refused the drag if no item is designated. In other cases:
If **draginitcmd** is empty, it returns:}} Tk,button,Button,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,button,Button,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,text,Text,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} Tk,label,Label,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,ttk::combobox,TCombobox,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ArrowButton,ArrowButton,-armcommand {-armcommand armcommand armcommand {} Entrytype {} {Specifies a Tcl command to associate with the ArrowButton when mouse button 1 is pressed over the ArrowButton. When **repeatdelay** or **repeatinterval** option is positive integer, this command is repeatedly called if mouse pointer is over the button and until mouse button 1 is released.}} Tk,ttk::spinbox,TSpinbox,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::checkbutton,TCheckbutton,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} BWidget,Label,Label,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.}} BWidget,NoteBook,NoteBook,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,LabelEntry,LabelEntry,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,checkbutton,Checkbutton,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::spinbox,TSpinbox,-show {-show show Show {} Entrytype {} {A list containing zero or more of the following values, specifying which
elements of the tree to display.}} Tk,listbox,Listbox,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,Dialog,Dialog,-place {-place place place center Listtype {none center left right above below} {Specifies where to draw the Dialog toplevel relative to the dialog's parent. Must be one of **none** , **center** , **left** , **right** , **above** , **below**. Default value of **place** is _center_.}} Tk,menubutton,Menubutton,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,SpinBox,SpinBox,-dragevent {-dragevent dragevent dragevent 3 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} Tk,ttk::combobox,TCombobox,-height {-height height Height 10 Entrytype {} {Specifies the height of the pop-down listbox, in rows.}} BWidget,ArrowButton,ArrowButton,-arrowrelief {-arrowrelief arrowrelief arrowrelief raised Listtype {raised sunken} {When ArrowButton **type** is _arrow_ , specifies the relief of the arrow. Must be **raised** or **sunken**.}} BWidget,LabelEntry,LabelEntry,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,Tree,Tree,-deltax {-deltax deltax deltax 10 Integertype {} {Specifies the horizontal indentation of the node. If the value is -1, the node will be drawn with the deltax for the entire tree.}} BWidget,SpinBox,SpinBox,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} BWidget,Tree,Tree,-deltay {-deltay deltay deltay 15 Integertype {} {Specifies vertical size of the nodes.}} Tk,ttk::sizegrip,TSizegrip,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::button,TButton,-width {-width width Width {} Entrytype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} Tk,tablelist::tablelist,Tablelist,-showarrow {-showarrow showArrow ShowArrow 1 Listtype {True False} {}} Tk,radiobutton,Radiobutton,-variable {-variable variable Variable selectedButton Entrytype {} {Specifies the name of a global
variable to set whenever this button is selected. Changes in this variable
also cause the button to select or deselect itself. Defaults to the value
**selectedButton**.}} BWidget,Button,Button,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} BWidget,TitleFrame,TitleFrame,-baseline {-baseline baseline baseline center Listtype {top center bottom} {Specifies the vertical alignment of the title: **top** , **center** or **bottom**.}} Tk,text,Text,-insertunfocussed {-insertunfocussed insertUnfocussed InsertUnfocussed none Listtype {hollow none solid} {Specifies how to display the
insertion cursor when the widget does not have the focus. Must be **none**
(the default) which means to not display the cursor, **hollow** which means to
display a hollow box, or **solid** which means to display a solid box. Note
that **hollow** and **solid** will appear very similar when the
**-blockcursor** option is false.}} Tk,text,Text,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,spinbox,Spinbox,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,Entry,Entry,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ or _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,Tree,Tree,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} Tk,message,Message,-padx {-padx padX Pad -1 Integertype {} {Specifies distance between image or window and text of the items.}} BWidget,Separator,Separator,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,message,Message,-pady {-pady padY Pad -1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,Entry,Entry,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} BWidget,ListBox,ListBox,-font {-font font Font TkDefaultFont Fonttype {} {Specifies a font for the label of the item.}} Tk,tablelist::tablelist,Tablelist,-incrarrowtype {-incrarrowtype incrArrowType IncrArrowType up Listtype {up down} {}} Tk,message,Message,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,StatusBar,StatusBar,-showseparator {-showseparator showseparator showseparator 1 Listtype {True False} {}} Tk,scrollbar,Scrollbar,-jump {-jump jump Jump 0 Listtype {True False} {For widgets with a slider that can be dragged to adjust a value, such as
scrollbars, this option determines when notifications are made about changes
in the value. The option's value must be a boolean of the form accepted by
**[Tcl_GetBoolean](../TclLib/GetInt.htm)**. If the value is false, updates are
made continuously as the slider is dragged. If the value is true, updates are
delayed until the mouse button is released to end the drag; at that point a
single notification is made (the value "jumps" rather than changing smoothly).}} BWidget,PanelFrame,PanelFrame,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,text,Text,-maxundo {-maxundo maxUndo MaxUndo 0 Integertype {} {Specifies the maximum number of compound undo actions on the
undo stack. A zero or a negative value imply an unlimited undo stack.}} Tk,label,Label,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,menubutton,Menubutton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,tablelist::tablelist,Tablelist,-editendonmodclick {-editendonmodclick editEndOnModClick EditEndOnModClick 1 Listtype {True False} {}} BWidget,LabelEntry,LabelEntry,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {Entry has a command wrapper for _drag-over_ events. This command enables auto scrolling and position extraction during the _drag-over_.
If **dropovercmd** is empty, the wrapper accepts the drop if **editable**
option is true and **state** option is normal.
If **dropovercmd** is not empty, it is called with the following arguments:}} BWidget,NoteBook,NoteBook,-width {-width width Width 0 Integertype {} {Specifies the desired width for the pages. If this option is equal to zero (the default) then the window will not request any size at all. In this case, user may want to call NoteBook:: **compute_size** to make NoteBook larger enough to contains the largest page.}} BWidget,ScrolledWindow,Frame,-sides {-sides sides sides se Listtype {ne en nw wn se es sw ws} {Side of the scrollbars. Possible values are: **ne** , **en** , **nw** , **wn** , **se** (default value), **es** , **sw** , **ws**.}} BWidget,Entry,Entry,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,ArrowButton,ArrowButton,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} Tk,ttk::entry,TEntry,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,labelframe,Labelframe,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ComboBox,ComboBox,-modifycmd {-modifycmd modifycmd modifycmd {} Entrytype {} {Specifies a Tcl command called when the user modify the value of the ComboBox by selecting it in the listbox or pressing arrow key.}} Tk,button,Button,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} BWidget,ComboBox,ComboBox,-listboxwidth {-listboxwidth listboxwidth listboxwidth 0 Integertype {} {Specifies the width of the listbox in the drop down. Defaults to the same size as the combobox.}} Tk,ttk::spinbox,TSpinbox,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} Tk,ttk::frame,TFrame,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::button,TButton,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} Tk,text,Text,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,scale,Scale,-sliderrelief {-sliderrelief sliderRelief SliderRelief raised Listtype {flat groove raised ridge solid sunken} {Specifies the relief to use when drawing the
slider, such as **raised** or **sunken**.}} Tk,scale,Scale,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ListBox,ListBox,-deltax {-deltax deltax deltax 10 Integertype {} {Specifies horizontal pad between each columns.}} Tk,labelframe,Labelframe,-class {-class class Class Labelframe ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. The **-class** option may
not be changed with the **configure** widget command.}} BWidget,ComboBox,ComboBox,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ (the default for a NoteBook page) or _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,ListBox,ListBox,-deltay {-deltay deltay deltay 15 Integertype {} {Specifies vertical size of the items.}} Tk,ttk::labelframe,TLabelframe,-labelwidget {-labelwidget labelWidget LabelWidget {} Entrytype {} {Class: **LabelWidget**     The name of a widget to use for the label. If set,
overrides the **-text** option. The **-labelwidget** must be a child of the
**[labelframe](../TkCmd/labelframe.htm)** widget or one of the
**[labelframe](../TkCmd/labelframe.htm)** 's ancestors, and must belong to the
same top-level widget as the **[labelframe](../TkCmd/labelframe.htm)**.}} BWidget,Tree,Tree,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} Tk,scale,Scale,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,LabelEntry,LabelEntry,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,entry,Entry,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,StatusBar,StatusBar,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,SpinBox,SpinBox,-vcmd {-vcmd validateCommand {} {} Entrytype {} {}} BWidget,ComboBox,ComboBox,-autopost {-autopost autopost autopost 0 Listtype {True False} {Specifies whether or not the combobox should post the drop down as the user types. If true, the combobox will post and scroll to the entry that most closely matches the user entry.}} Tk,ttk::label,TLabel,-borderwidth {-borderwidth borderWidth BorderWidth {} Entrytype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,entry,Entry,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} BWidget,StatusBar,StatusBar,-bg {-bg background {} {} Colortype {} {}} BWidget,Tree,Tree,-crosscloseimage {-crosscloseimage crosscloseimage crosscloseimage {} Entrytype {} {Specifies an image to be displayed in place of the standard cross when a node is closed. Overrides the -crossclosebitmap option.}} BWidget,ComboBox,ComboBox,-vcmd {-vcmd validateCommand {} {} Entrytype {} {}} Tk,label,Label,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,Entry,Entry,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,SpinBox,SpinBox,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 400 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} Tk,ttk::menubutton,TMenubutton,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,frame,Frame,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,scrollbar,Scrollbar,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 300 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} BWidget,ScrolledWindow,Frame,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,toplevel,Toplevel,-container {-container container Container 0 ? {} {**Container**     The value must be a boolean. If true, it means that this
window will be used as a container in which some other application will be
embedded (for example, a Tk toplevel can be embedded using the **-use**
option). The window will support the appropriate window manager protocols for
things like geometry requests. The window should not have any children of its
own in this application. This option may not be changed with the **configure**
widget command.}} BWidget,NoteBook,NoteBook,-background {-background background Background #d9d9d9 Colortype {} {Background color for the tab when it is not active.}} Tk,canvas,Canvas,-state {-state state State normal Entrytype {} {**State**     Modifies the default state of the canvas where _state_ may be
set to one of: **normal** , **disabled** , or **hidden**. Individual canvas
objects all have their own state option which may override the default state.
Many options can take separate specifications such that the appearance of the
item can be different in different situations. The options that start with
**active** control the appearance when the mouse pointer is over it, while the
option starting with **disabled** controls the appearance when the state is
disabled. Canvas items which are **disabled** will not react to canvas
bindings.}} BWidget,Entry,Entry,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Entry,Entry,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,ttk::radiobutton,TRadiobutton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,ListBox,ListBox,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,tablelist::tablelist,Tablelist,-activestyle {-activestyle activeStyle ActiveStyle frame Listtype {frame none underline} {Specifies the style in which to draw the active
element. This must be one of **dotbox** (show a focus ring around the active
element), **none** (no special indication of active element) or **underline**
(underline the active element). The default is **underline** on Windows, and
**dotbox** elsewhere.}} BWidget,SpinBox,SpinBox,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,toplevel,Toplevel,-height {-height height Height 0 Integertype {} {Specifies the desired height for the window in any of the forms
acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this option is
less than or equal to zero then the window will not request any size at all.}} Tk,scale,Scale,-command {-command command Command {} Entrytype {} {Specifies the prefix of a Tcl command to invoke whenever the
scale's value is changed via a widget command. The actual command consists of
this option followed by a space and a real number indicating the new value of
the scale.}} Tk,ttk::frame,TFrame,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} BWidget,LabelFrame,LabelFrame,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,ttk::treeview,Treeview,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::spinbox,TSpinbox,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} Tk,tablelist::tablelist,Tablelist,-showhorizseparator {-showhorizseparator showHorizSeparator ShowHorizSeparator 1 Listtype {True False} {}} Tk,toplevel,Toplevel,-background {-background background Background #d9d9d9 Colortype {} {Class: **Background**     This option is the same as the standard
**-background** option except that its value may also be specified as an empty
string. In this case, the widget will display no background or border, and no
colors will be consumed from its colormap for its background and border.}} BWidget,LabelEntry,LabelEntry,-labelanchor {-labelanchor labelanchor Anchor w Listtype {nw n ne en e es se s sw ws w  wn} {Specifies where to place the label. A label is only
displayed if the **-text** option is not the empty string. Valid values for
this option are (listing them clockwise) **nw** , **n** , **ne** , **en** ,
**e** , **es** , **se** , **s** , **sw** , **ws** , **w** and **wn**. The
default value is **nw**.}} Tk,ttk::entry,TEntry,-style {-style style Style {} Entrytype {} {}} BWidget,Entry,Entry,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} Tk,text,Text,-font {-font font Font TkFixedFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,Entry,Entry,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} BWidget,Entry,Entry,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {Specifies a command to be called when **dragevent** occurs on widget. **draginitcmd** must be a command conforming to the description of the option **draginitcmd** of **DragSite::[register](DragSite.html#register)**.
if **draginitcmd** is empty, the command refuse the drag if entry is empty or
if portion of text is selected and event doesn't occur above the selection. In
all other cases, the command returns:}} BWidget,ProgressBar,ProgressBar,-height {-height height Height 4m Integertype {} {Specifies the desired height for the progress indicator.}} Tk,ttk::entry,TEntry,-justify {-justify justify Justify left Listtype {left right center} {Specifies how the text is aligned within the entry widget. One
of **left** , **center** , or **right**.}} Tk,radiobutton,Radiobutton,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,panedwindow,Panedwindow,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,TitleFrame,TitleFrame,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,LabelEntry,LabelEntry,-entrybg {-entrybg entrybg Background #ffffff Colortype {} {}} Tk,entry,Entry,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,SpinBox,SpinBox,-editable {-editable editable editable 1 Listtype {True False} {Specifies whether the Entry is editable by the user. Equivalent to the **state** option of the Tk entry widget.}} Tk,ttk::progressbar,TProgressbar,-phase {-phase phase Phase 0 Integertype {} {**Phase**     Read-only option. The widget periodically increments the value
of this option whenever the **-value** is greater than 0 and, in _determinate_
mode, less than **-maximum**. This option may be used by the current theme to
provide additional animation effects.}} Tk,text,Text,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,Dialog,Dialog,-state {-state state State normal Listtype {normal disabled} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} BWidget,ProgressBar,ProgressBar,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Dialog,Dialog,-parent {-parent parent parent {} Entrytype {} {Parent of the Dialog. Dialog is placed relative to its parent. If empty, it is placed relative to the root window. Also see **place** option.}} BWidget,LabelEntry,LabelEntry,-dragtype {-dragtype dragtype dragtype {} Entrytype {} {Specifies an alternate type of dragged object.}} Tk,canvas,Canvas,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} BWidget,NoteBook,NoteBook,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Color used for the tab's text when the tab is disabled.}} BWidget,SpinBox,SpinBox,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,tablelist::tablelist,Tablelist,-labelpady {-labelpady labelPadY Pad 1 Integertype {} {}} Tk,spinbox,Spinbox,-disabledbackground {-disabledbackground disabledBackground DisabledBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the spinbox is disabled. If this option is
the empty string, the normal background color is used.}} BWidget,LabelFrame,LabelFrame,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,button,Button,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 0 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} BWidget,Dialog,Dialog,-title {-title title title {} Entrytype {} {Title of the Dialog toplevel.}} Tk,checkbutton,Checkbutton,-tristatevalue {-tristatevalue tristateValue TristateValue {} Entrytype {} {Specifies the value that causes the checkbutton
to display the multi-value selection, also known as the tri-state mode.
Defaults to "".}} BWidget,SpinBox,SpinBox,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} BWidget,ListBox,ListBox,-multicolumn {-multicolumn multicolumn multicolumn 0 Listtype {True False} {Specifies wether or not ListBox layouts items in order to see each one vertically.}} BWidget,Button,Button,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,Tree,Tree,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {Tree has a command wrapper for _drag-over_ events. This command enables auto scrolling and position extraction during the _drag-over_. If **dropovercmd** is not empty, the command is called with the following aguments:}} Tk,ttk::menubutton,TMenubutton,-width {-width width Width {} Entrytype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,SpinBox,SpinBox,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} Tk,menubutton,Menubutton,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,Entry,Entry,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,Label,Label,-focus {-focus focus focus {} Entrytype {} {Specifies a pathname to set the focus on for Label:: **setfocus** command.}} BWidget,Tree,Tree,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,canvas,Canvas,-width {-width width Width 10c Integertype {} {Specifies a desired window width that the canvas widget should
request from its geometry manager. The value may be specified in any of the
forms described in the **COORDINATES** section below.}} Tk,message,Message,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,SpinBox,SpinBox,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,LabelFrame,LabelFrame,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} Tk,canvas,Canvas,-closeenough {-closeenough closeEnough CloseEnough 1 Floattype {} {Specifies a floating-point value indicating how
close the mouse cursor must be to an item before it is considered to be
"inside" the item. Defaults to 1.0.}} Tk,checkbutton,Checkbutton,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,SpinBox,SpinBox,-bg {-bg background {} {} Colortype {} {}} Tk,ttk::radiobutton,TRadiobutton,-variable {-variable variable Variable ::selectedButton Entrytype {} {**Variable**     The name of a global variable whose value is linked to the
widget. Default value is **::selectedButton**.}} Tk,ttk::label,TLabel,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,NoteBook,NoteBook,-ibd {-ibd internalborderwidth {} {} Integertype {} {}} Tk,text,Text,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,ttk::scale,TScale,-length {-length length Length 100 Integertype {} {Specifies the desired long dimension of the scale in screen
units (i.e. any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)** ). For vertical scales this is the
scale's height; for horizontal scales it is the scale's width.}} Tk,ttk::checkbutton,TCheckbutton,-variable {-variable variable Variable {} Entrytype {} {**Variable**     The name of a global variable whose value is linked to the
widget. Defaults to the widget pathname if not specified.}} BWidget,Button,Button,-disarmcommand {-disarmcommand disarmcommand disarmcommand {} Entrytype {} {Specifies a Tcl command to associate with the Button when mouse button 1 is released. This command is called even if pointer is not over the Button, and always before the command specified by **command** option. It is typically used in conjuntion with **armcommand** , **repeatdelay** and **repeatinterval**.}} BWidget,PagesManager,Canvas,-height {-height height Height 0 Integertype {} {Specifies the desired height for the pages. If this option is equal to zero (the default) then the window will not request any size at all. In this case, user may want to call PagesManager:: **compute_size** to make PagesManager larger enough to contains the largest page.}} Tk,frame,Frame,-container {-container container Container 0 ? {} {**Container**     The value must be a boolean. If true, it means that this
window will be used as a container in which some other application will be
embedded (for example, a Tk toplevel can be embedded using the **-use**
option). The window will support the appropriate window manager protocols for
things like geometry requests. The window should not have any children of its
own in this application. This option may not be changed with the **configure**
widget command. Note that **-borderwidth** , **-padx** and **-pady** are
ignored when configured as a container since a container has no border.}} Tk,tablelist::tablelist,Tablelist,-setgrid {-setgrid setGrid SetGrid 0 Listtype {True False} {Specifies a boolean value that determines whether this widget
controls the resizing grid for its top-level window. This option is typically
used in text widgets, where the information in the widget has a natural size
(the size of a character) and it makes sense for the window's dimensions to be
integral numbers of these units. These natural window sizes form a grid. If
the **-setgrid** option is set to true then the widget will communicate with
the window manager so that when the user interactively resizes the top-level
window that contains the widget, the dimensions of the window will be
displayed to the user in grid units and the window size will be constrained to
integral numbers of grid units. See the section **GRIDDED GEOMETRY
MANAGEMENT** in the **[wm](../TkCmd/wm.htm)** manual entry for more details.}} Tk,ttk::entry,TEntry,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the name of a global variable whose value is
linked to the entry widget's contents. Whenever the variable changes value,
the widget's contents are updated, and vice versa.}} Tk,radiobutton,Radiobutton,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} BWidget,LabelEntry,LabelEntry,-entryfg {-entryfg entryfg Foreground #000000 Colortype {} {}} BWidget,PanelFrame,PanelFrame,-ipad {-ipad ipad ipad 1 Entrytype {} {Padding in pixels between client widget and scrollbars. Default value: **1**.}} BWidget,Label,Label,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,ttk::combobox,TCombobox,-background {-background windowColor WindowColor {} Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,entry,Entry,-invcmd {-invcmd -invalidcommand {} {} Entrytype {} {}} BWidget,NoteBook,NoteBook,-tabpady {-tabpady tabpady tabpady {0 6} Listtype {positive screen distance} {Specifies the padding between the text in the tab and the top and bottom of the tab. Padding may be a list of two values to specify padding for top and bottom separately. Padding defaults to {0 6}.}} BWidget,ComboBox,ComboBox,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {Entry has a command wrapper for _drag-over_ events. This command enables auto scrolling and position extraction during the _drag-over_.
If **dropovercmd** is empty, the wrapper accepts the drop if **editable**
option is true and **state** option is normal.
If **dropovercmd** is not empty, it is called with the following arguments:}} Tk,button,Button,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 0 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} Tk,menubutton,Menubutton,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,labelframe,Labelframe,-container {-container container Container 0 ? {} {**Container**     The value must be a boolean. If true, it means that this
window will be used as a container in which some other application will be
embedded (for example, a Tk toplevel can be embedded using the **-use**
option). The window will support the appropriate window manager protocols for
things like geometry requests. The window should not have any children of its
own in this application. This option may not be changed with the **configure**
widget command.}} Tk,text,Text,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} BWidget,SpinBox,SpinBox,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,tablelist::tablelist,Tablelist,-acceptchildcommand {-acceptchildcommand acceptChildCommand AcceptChildCommand {} Entrytype {} {}} Tk,radiobutton,Radiobutton,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,toplevel,Toplevel,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,radiobutton,Radiobutton,-bg {-bg -background {} {} Colortype {} {}} BWidget,LabelEntry,LabelEntry,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,tablelist::tablelist,Tablelist,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,menu,Menu,-cursor {-cursor cursor Cursor arrow Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::treeview,Treeview,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,canvas,Canvas,-confine {-confine confine Confine 1 Listtype {True False} {Specifies a boolean value that indicates whether or not it
should be allowable to set the canvas's view outside the region defined by the
**scrollRegion** argument. Defaults to true, which means that the view will be
constrained within the scroll region.}} Tk,ttk::notebook,TNotebook,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} BWidget,LabelEntry,LabelEntry,-labelwidth {-labelwidth labelwidth Width 0 Integertype {} {}} Tk,checkbutton,Checkbutton,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} Tk,menu,Menu,-type {-type type Type normal Listtype {normal tearoff menubar} {This option can be one of **menubar** , **tearoff** , or **normal** , and is
set when the menu is created. While the string returned by the configuration
database will change if this option is changed, this does not affect the menu
widget's behavior. This is used by the cloning mechanism and is not normally
set outside of the Tk library.}} BWidget,Entry,Entry,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} BWidget,LabelEntry,LabelEntry,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,LabelEntry,LabelEntry,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,ListBox,ListBox,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,ttk::treeview,Treeview,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,ttk::combobox,TCombobox,-justify {-justify justify Justify left Listtype {left right center} {Specifies how the text is aligned within the widget. Must be
one of **left** , **center** , or **right**.}} BWidget,LabelEntry,LabelEntry,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,canvas,Canvas,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} Tk,scale,Scale,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,LabelFrame,LabelFrame,-state {-state state State normal Listtype {normal disabled} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} BWidget,Tree,Tree,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,ttk::checkbutton,TCheckbutton,-offvalue {-offvalue offValue OffValue 0 Entrytype {} {**OffValue**     The value to store in the associated **-variable** when the
widget is deselected. Defaults to **0**.}} BWidget,NoteBook,NoteBook,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 0 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} Tk,menubutton,Menubutton,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} BWidget,Label,Label,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,ScrollableFrame,Canvas,-xscrollincrement {-xscrollincrement xScrollIncrement ScrollIncrement 0 Integertype {} {See **xscrollincrement** option of **canvas** widget.}} Tk,ttk::entry,TEntry,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ProgressBar,ProgressBar,-foreground {-foreground foreground Foreground blue Colortype {} {Specifies the color of the border of the rectangle.}} Tk,canvas,Canvas,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} BWidget,ButtonBox,ButtonBox,-background {-background background Background #d9d9d9 Colortype {} {Specifies a default background color for all added buttons and for the frame.
For _themed_ wigets, the button color is not set.}} BWidget,Label,Label,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} Tk,scrollbar,Scrollbar,-activerelief {-activerelief activeRelief Relief raised Listtype {flat groove raised ridge solid sunken} {Specifies the relief to use when displaying the
element that is active, if any. Elements other than the active element are
always displayed with a raised relief.}} BWidget,LabelFrame,LabelFrame,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,ComboBox,ComboBox,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **[focus](../TkCmd/focus.htm)** , **focusin** , **focusout** ,
**key** , or **all**. It defaults to **none**. When you want validation, you
must explicitly state which mode you wish to use. See **VALIDATION** below for
more.}} BWidget,Label,Label,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,Dialog,Dialog,-modal {-modal modal modal local Listtype {none local global} {This option must be **none** , **local** or **global**. The value of this option specifies the grab mode of the dialog and how works Dialog:: **draw**.}} Tk,tablelist::tablelist,Tablelist,-targetcolor {-targetcolor targetColor TargetColor black Entrytype {} {}} Tk,ttk::label,TLabel,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,tablelist::tablelist,Tablelist,-labelfont {-labelfont labelFont Font TkDefaultFont Fonttype {} {}} BWidget,ComboBox,ComboBox,-images {-images images images {} Entrytype {} {A list of images that correspond to the **-values** option. Each image will be drawn next to its value in the drop down. This option enables the **-bwlistbox** by default as it is needed to display images.}} Tk,ttk::checkbutton,TCheckbutton,-onvalue {-onvalue onValue OnValue 1 Entrytype {} {**OnValue**     The value to store in the associated **-variable** when the
widget is selected. Defaults to **1**.}} BWidget,ComboBox,ComboBox,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,tablelist::tablelist,Tablelist,-stripeforeground {-stripeforeground stripeForeground Foreground {} Colortype {} {}} Tk,toplevel,Toplevel,-visual {-visual visual Visual {} ? {} {Specifies visual information for the new window in any of the
forms accepted by **[Tk_GetVisual](../TkLib/GetVisual.htm)**. If this option
is not specified, the new window will use the default visual for its screen.
The **-visual** option may not be modified with the **configure** widget
command.}} Tk,text,Text,-blockcursor {-blockcursor blockCursor BlockCursor 0 Listtype {True False} {Specifies a boolean that says whether the blinking
insertion cursor should be drawn as a character-sized rectangular block. If
false (the default) a thin vertical line is used for the insertion cursor.}} Tk,radiobutton,Radiobutton,-fg {-fg -foreground {} {} Colortype {} {}} Tk,tablelist::tablelist,Tablelist,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::notebook,TNotebook,-style {-style style Style {} Entrytype {} {}} Tk,ttk::labelframe,TLabelframe,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} BWidget,Button,Button,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,NoteBook,NoteBook,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,Label,Label,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} Tk,radiobutton,Radiobutton,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,ScrollableFrame,Canvas,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,NoteBook,NoteBook,-bg {-bg background {} {} Colortype {} {}} Tk,label,Label,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,ComboBox,ComboBox,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,ttk::entry,TEntry,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,ArrowButton,ArrowButton,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 0 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} BWidget,LabelEntry,LabelEntry,-vcmd {-vcmd validateCommand {} {} Entrytype {} {}} Tk,button,Button,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,ttk::treeview,Treeview,-style {-style style Style {} Entrytype {} {}} Tk,ttk::menubutton,TMenubutton,-direction {-direction direction Direction below Listtype {above below left right flush} {Specifies where the menu is to be popped up relative to the
menubutton. One of: **above** , **below** , **left** , **right** , or
**flush**. The default is **below**. **flush** pops the menu up directly over
the menubutton.}} Tk,ttk::label,TLabel,-anchor {-anchor anchor Anchor {} Listtype {n ne e se s sw w nw center} {Specifies how the information in the widget is positioned
relative to the inner margins. Legal values are **n** , **ne** , **e** ,
**se** , **s** , **sw** , **w** , **nw** , and **center**. See also
**-justify**.}} Tk,scale,Scale,-variable {-variable variable Variable {} Entrytype {} {Specifies the name of a global variable to link to the scale.
Whenever the value of the variable changes, the scale will update to reflect
this value. Whenever the scale is manipulated interactively, the variable will
be modified to reflect the scale's new value.}} Tk,message,Message,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,canvas,Canvas,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,Entry,Entry,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,ListBox,ListBox,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} Tk,ttk::scale,TScale,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,ttk::panedwindow,TPanedwindow,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,label,Label,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the label: **normal** ,
**active** , or **disabled**. In normal state the button is displayed using
the **-foreground** and **-background** options. In active state the label is
displayed using the **-activeforeground** and **-activebackground** options.
In the disabled state the **-disabledforeground** and **-background** options
determine how the button is displayed.}} BWidget,ListBox,ListBox,-width {-width width Width 20 Integertype {} {Specifies the desired width for the listbox in units of 8 pixels.}} BWidget,LabelFrame,LabelFrame,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,entry,Entry,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,LabelFrame,LabelFrame,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} BWidget,ScrollableFrame,Canvas,-constrainedwidth {-constrainedwidth constrainedwidth constrainedwidth 0 Listtype {True False} {Specifies whether or not the scrollable area should have the same width of the scrolled window. If true, horizontal scrollbar is not needed.}} Tk,radiobutton,Radiobutton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,labelframe,Labelframe,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,tablelist::tablelist,Tablelist,-spacing {-spacing spacing Spacing 0 Integertype {} {Specifies the default spacing between buttons. This value can be changed before each call to **add**.}} Tk,scale,Scale,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,radiobutton,Radiobutton,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} BWidget,LabelFrame,LabelFrame,-width {-width width Width 0 Integertype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} BWidget,Tree,Tree,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,scale,Scale,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,Label,Label,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,tablelist::tablelist,Tablelist,-labelrelief {-labelrelief labelRelief Relief raised Listtype {flat groove raised ridge solid sunken} {}} Tk,ttk::scale,TScale,-from {-from from From 0 Floattype {} {A real value corresponding to the left or top end of the scale.}} Tk,labelframe,Labelframe,-bg {-bg -background {} {} Entrytype {} {}} BWidget,Tree,Tree,-dragevent {-dragevent dragevent dragevent 1 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} Tk,scale,Scale,-bg {-bg -background {} {} Colortype {} {}} Tk,tablelist::tablelist,Tablelist,-collapsecommand {-collapsecommand collapseCommand CollapseCommand {} Entrytype {} {}} BWidget,SpinBox,SpinBox,-invalidcommand {-invalidcommand invalidCommand InvalidCommand {} Entrytype {} {Specifies a script
to eval when **-validatecommand** returns 0. Setting it to {} disables this
feature (the default). The best use of this option is to set it to _bell_. See
**VALIDATION** below for more information.}} BWidget,ScrolledWindow,Frame,-size {-size size size 0 Entrytype {} {Size of the scrollbars in pixels. Use **0** for standard size (default value).
This option has no effect if widget is _themed_.}} BWidget,Tree,Tree,-dropovermode {-dropovermode dropovermode dropovermode wpn Entrytype {} {Specifies the type of _drop-over_ interaction. Must be a combination of **w** , which specifies that drop can occurs everywhere on widget, **p** , which specifies that drop can occurs between two nodes, and **n** , which specifies that drop occurs inside nodes.}} Tk,labelframe,Labelframe,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,tablelist::tablelist,Tablelist,-expandcommand {-expandcommand expandCommand ExpandCommand {} Entrytype {} {}} BWidget,Label,Label,-dragtype {-dragtype dragtype dragtype {} Entrytype {} {Specifies an alternate type of dragged object.}} BWidget,Dialog,Dialog,-transient {-transient transient transient 1 Entrytype {} {Specifies if the Dialog Toplevel should be a transient window or not. Default value of **transient** is _true_.}} Tk,text,Text,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Entrytype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,button,Button,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,listbox,Listbox,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} Tk,entry,Entry,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} BWidget,LabelEntry,LabelEntry,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} BWidget,LabelEntry,LabelEntry,-labelheight {-labelheight labelheight Height 0 Integertype {} {}} Tk,tablelist::tablelist,Tablelist,-movecursor {-movecursor moveCursor MoveCursor hand2 Entrytype {} {}} Tk,ttk::frame,TFrame,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,scale,Scale,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,ListBox,ListBox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} Tk,ttk::labelframe,TLabelframe,-style {-style style Style {} Entrytype {} {}} Tk,ttk::label,TLabel,-relief {-relief relief Relief {} Entrytype {} {Specifies the 3-D effect desired for the widget border. Valid
values are **flat** , **groove** , **raised** , **ridge** , **solid** , and
**sunken**.}} Tk,message,Message,-aspect {-aspect aspect Aspect 150 Integertype {} {Specifies a non-negative integer value indicating desired
aspect ratio for the text. The aspect ratio is specified as 100*width/height.
100 means the text should be as wide as it is tall, 200 means the text should
be twice as wide as it is tall, 50 means the text should be twice as tall as
it is wide, and so on. Used to choose line length for text if **-width**
option is not specified. Defaults to 150.}} BWidget,Button,Button,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} BWidget,SpinBox,SpinBox,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 100 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} Tk,scrollbar,Scrollbar,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,PanedWindow,PanedWindow,-pad {-pad pad pad 4 Entrytype {} {Specifies additional space between the button of the sash and children.}} Tk,listbox,Listbox,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,button,Button,-default {-default default Default disabled Listtype {active disabled normal} {Specifies one of three states for the default ring: **normal**
, **active** , or **disabled**. In active state, the button is drawn with the
platform specific appearance for a default button. In normal state, the button
is drawn with the platform specific appearance for a non-default button,
leaving enough space to draw the default button appearance. The normal and
active states will result in buttons of the same size. In disabled state, the
button is drawn with the non-default button appearance without leaving space
for the default appearance. The disabled state may result in a smaller button
than the active state.}} BWidget,NoteBook,NoteBook,-fg {-fg foreground {} {} Colortype {} {}} BWidget,ListBox,ListBox,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,ArrowButton,ArrowButton,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,spinbox,Spinbox,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Entry,Entry,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Tree,Tree,-closecmd {-closecmd closecmd closecmd {} Entrytype {} {Specifies a command to be called when user close a node. The closed node is appended to the command.}} Tk,ttk::scale,TScale,-style {-style style Style {} Entrytype {} {}} Tk,ttk::panedwindow,TPanedwindow,-style {-style style Style {} Entrytype {} {}} BWidget,PanelFrame,PanelFrame,-width {-width width Width 0 Integertype {} {Specifies the desired height for the widget.
The spacing to place around individual panel area items.
The color for the panel area background. Defaults to the selection highlight background color.
The color for the title text. Defaults to the selection highlight foreground color.
Specifies the desired width for the widget.}} Tk,panedwindow,Panedwindow,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,ListBox,ListBox,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,checkbutton,Checkbutton,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} Tk,checkbutton,Checkbutton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,tablelist::tablelist,Tablelist,-stripeheight {-stripeheight stripeHeight StripeHeight 1 Integertype {} {}} Tk,label,Label,-width {-width width Width 0 Integertype {} {Specifies a desired width for the label. If an image or bitmap
is being displayed in the label then the value is in screen units (i.e. any of
the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text
it is in characters. If this option is not specified, the label's desired
width is computed from the size of the image or bitmap or text being displayed
in it.}} BWidget,MainFrame,Frame,-menuentryfont {-menuentryfont menuentryfont menuentryfont {} Entrytype {} {}} Tk,canvas,Canvas,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,spinbox,Spinbox,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,radiobutton,Radiobutton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} Tk,panedwindow,Panedwindow,-bg {-bg -background {} {} Colortype {} {}} Tk,menubutton,Menubutton,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Specifies foreground color to use when
drawing active elements. See above for definition of active elements.}} BWidget,LabelEntry,LabelEntry,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,tablelist::tablelist,Tablelist,-resizablecolumns {-resizablecolumns resizableColumns ResizableColumns 1 Listtype {True False} {}} BWidget,SpinBox,SpinBox,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} Tk,labelframe,Labelframe,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,Tree,Tree,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,spinbox,Spinbox,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,scale,Scale,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,Label,Label,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index of a character to underline in the label. 0 corresponds to the first character of the text displayed, 1 to the next character, and so on.
The binding **< Alt- _char_ >** is automatically set on the toplevel of the
Label to call Label:: **setfocus**.}} Tk,ttk::radiobutton,TRadiobutton,-value {-value Value Value 1 Entrytype {} {**Value**     The value to store in the associated **-variable** when the
widget is selected.}} Tk,scrollbar,Scrollbar,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,radiobutton,Radiobutton,-indicatoron {-indicatoron indicatorOn IndicatorOn 1 Listtype {True False} {Specifies whether or not the indicator should be
drawn. Must be a proper boolean value. If false, the **-relief** option is
ignored and the widget's relief is always sunken if the widget is selected and
raised otherwise.}} BWidget,Label,Label,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ListBox,ListBox,-autofocus {-autofocus autofocus autofocus 1 Entrytype {} {If this option is true, the listbox will take focus any time the user clicks in it. Without focus, the listbox's mouse wheel bindings will not work properly. The default is true.}} BWidget,ArrowButton,ArrowButton,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this widget. See also [DynamicHelp](DynamicHelp.html).}} BWidget,ComboBox,ComboBox,-entrybg {-entrybg entrybg Background #ffffff Colortype {} {}} BWidget,ComboBox,ComboBox,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,button,Button,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} Tk,toplevel,Toplevel,-width {-width width Width 0 Integertype {} {Specifies the desired width for the window in any of the forms
acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this option is
less than or equal to zero then the window will not request any size at all.}} Tk,button,Button,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,canvas,Canvas,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} BWidget,ListBox,ListBox,-selectfill {-selectfill selectfill selectfill 0 Entrytype {} {If true, the listbox will draw a selection rectangle that fills the listbox from left-to-right instead of just drawing a box around the selected item. This more closely mimics the standard Tk listbox.}} BWidget,LabelEntry,LabelEntry,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this page. See also [DynamicHelp](DynamicHelp.html).}} Tk,checkbutton,Checkbutton,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,labelframe,Labelframe,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,ArrowButton,ArrowButton,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to associate with the ArrowButton. This command is typically invoked when mouse button 1 is released over the ArrowButton window.}} BWidget,Tree,Tree,-crossclosebitmap {-crossclosebitmap crossclosebitmap crossclosebitmap {} Entrytype {} {Specifies a bitmap to be displayed in place of the standard cross when a node is closed.}} Tk,ttk::scale,TScale,-to {-to to To 1.0 Floattype {} {Specifies a real value corresponding to the right or bottom end of the scale.
This value may be either less than or greater than the **-from** option.}} Tk,ttk::radiobutton,TRadiobutton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,Tree,Tree,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,Tree,Tree,-dragtype {-dragtype dragtype dragtype TREE_NODE Entrytype {} {Specifies an alternate type of dragged object.}} BWidget,TitleFrame,TitleFrame,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,ttk::entry,TEntry,-state {-state state State normal Entrytype {} {Specifies one of three states for the entry, **normal** , **disabled** , or
**readonly**. See **WIDGET STATES** , below.}} Tk,menubutton,Menubutton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} BWidget,ComboBox,ComboBox,-expand {-expand expand expand none Listtype {none tab} {Specifies the value expansion behavior for the window. It must be **none** (default) or **tab**. If **tab** is specified, then a Tab binding is added to attempt to expand the current value based on the other values in **-values**.}} Tk,tablelist::tablelist,Tablelist,-editendonfocusout {-editendonfocusout editEndOnFocusOut EditEndOnFocusOut 0 Listtype {True False} {}} Tk,radiobutton,Radiobutton,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,SpinBox,SpinBox,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,tablelist::tablelist,Tablelist,-setfocus {-setfocus setFocus SetFocus 1 Listtype {True False} {}} Tk,scale,Scale,-digits {-digits digits Digits 0 Integertype {} {**Digits**     An integer specifying how many significant digits should be
retained when converting the value of the scale to a string. If the number is
less than or equal to zero, then the scale picks the smallest value that
guarantees that every possible slider position prints as a different string.}} Tk,menu,Menu,-title {-title title Title {} Entrytype {} {**Title**     The string will be used to title the window created when this
menu is torn off. If the title is NULL, then the window will have the title of
the menubutton or the text of the cascade item from which this menu was
invoked.}} BWidget,Label,Label,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,LabelFrame,LabelFrame,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,panedwindow,Panedwindow,-sashcursor {-sashcursor sashCursor Cursor {} Entrytype {} {Class: **SashCursor**     Mouse cursor to use when over a sash. If null,
**sb_h_double_arrow** will be used for horizontal panedwindows, and
**sb_v_double_arrow** will be used for vertical panedwindows.}} Tk,message,Message,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} Tk,checkbutton,Checkbutton,-indicatoron {-indicatoron indicatorOn IndicatorOn 1 Listtype {True False} {Specifies whether or not the indicator should be
drawn. Must be a proper boolean value. If false, the **-relief** option is
ignored and the widget's relief is always sunken if the widget is selected and
raised otherwise.}} BWidget,Label,Label,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,Dialog,Dialog,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,scale,Scale,-label {-label label Label {} Entrytype {} {**Label**     A string to display as a label for the scale. For vertical
scales the label is displayed just to the right of the top end of the scale.
For horizontal scales the label is displayed just above the left end of the
scale. If the option is specified as an empty string, no label is displayed.}} Tk,entry,Entry,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} BWidget,ArrowButton,ArrowButton,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} Tk,ttk::scale,TScale,-command {-command command Command {} Entrytype {} {Specifies the prefix of a Tcl command to invoke whenever the
scale's value is changed via a widget command. The actual command consists of
this option followed by a space and a real number indicating the new value of
the scale.}} BWidget,ComboBox,ComboBox,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.
If **dragendcmd** is empty, the internal _dragend_ command updates the entry
following the operation ( **move** or **copy** ) and the dragged data (whole
or selected part of the entry).}} BWidget,ComboBox,ComboBox,-invcmd {-invcmd invalidCommand {} {} Entrytype {} {}} Tk,toplevel,Toplevel,-use {-use use Use {} ? {} {This option is used for embedding. If the value is not an empty string, it
must be the window identifier of a container window, specified as a
hexadecimal string like the ones returned by the **[winfo
id](../TkCmd/winfo.htm)** command. The toplevel widget will be created as a
child of the given container instead of the root window for the screen. If the
container window is in a Tk application, it must be a frame or toplevel widget
for which the **-container** option was specified. This option may not be
changed with the **configure** widget command.}} Tk,tablelist::tablelist,Tablelist,-selectfiltercommand {-selectfiltercommand selectFilterCommand SelectFilterCommand {} Entrytype {} {}} Tk,tablelist::tablelist,Tablelist,-tooltipdelcommand {-tooltipdelcommand tooltipDelCommand TooltipDelCommand {} Entrytype {} {}} Tk,scale,Scale,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,radiobutton,Radiobutton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,ttk::spinbox,TSpinbox,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to evaluate when you want to validate the input in the widget. Setting it to
an empty string disables this feature (the default). Validation occurs
according to the value of **-validate**. This command must return a valid Tcl
boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then the
value of the widget will not change and the **-invalidcommand** will be
evaluated if it is set. If it returns 1, then value will be changed. See
**VALIDATION** below for more information.}} BWidget,Separator,Separator,-orient {-orient orient Orient horizontal Entrytype {} {Specifies the orientation of the button box. If this option is **horizontal** (the default), buttons are added from top to bottom. If this option is **vertical** , buttons are added from left to right.}} BWidget,ButtonBox,ButtonBox,-bg {-bg background {} {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-disabledbackground {-disabledbackground disabledBackground DisabledBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the spinbox is disabled. If this option is
the empty string, the normal background color is used.}} BWidget,SpinBox,SpinBox,-draginitcmd {-draginitcmd draginitcmd draginitcmd {} Entrytype {} {Tree has a command wrapper for _drag-init_ events. This command refused the drag if no node is designated. In other cases:
If **draginitcmd** is empty, it returns:}} Tk,entry,Entry,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} BWidget,Button,Button,-padx {-padx padX Pad 3m Integertype {} {Specifies distance between image or window and text of the items.}} BWidget,Entry,Entry,-show {-show show Show {} Entrytype {} {If this option is specified, then the true contents of the entry are not displayed in the window. Instead, each character in the entry's value will be displayed as the first character in the value of this option, such as ``*''. This is useful, for example, if the entry is to be used to enter a password. If characters in the entry are selected and copied elsewhere, the information copied will be what is displayed, not the true contents of the entry.}} Tk,entry,Entry,-background {-background background Background #ffffff Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,Button,Button,-pady {-pady padY Pad 1m Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} Tk,button,Button,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,tablelist::tablelist,Tablelist,-labelbd {-labelbd -labelborderwidth {} {} Integertype {} {}} BWidget,Entry,Entry,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,canvas,Canvas,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,LabelFrame,LabelFrame,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ScrolledWindow,Frame,-bd {-bd borderWidth {} {} Integertype {} {}} Tk,tablelist::tablelist,Tablelist,-labelbg {-labelbg -labelbackground {} {} Colortype {} {}} BWidget,MainFrame,Frame,-progresstype {-progresstype progresstype progresstype normal Listtype {normal incremental infinite nonincremental_infinite} {}} BWidget,LabelEntry,LabelEntry,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} BWidget,ButtonBox,ButtonBox,-orient {-orient orient Orient horizontal Entrytype {} {Specifies the orientation of the button box. If this option is **horizontal** (the default), buttons are added from top to bottom. If this option is **vertical** , buttons are added from left to right.}} Tk,tablelist::tablelist,Tablelist,-columntitles {-columntitles columnTitles ColumnTitles {} Entrytype {} {}} Tk,spinbox,Spinbox,-increment {-increment increment Increment 1 Floattype {} {**Increment**     A floating-point value specifying the increment. When used
with **-from** and **-to** , the value in the widget will be adjusted by
**-increment** when a spin button is pressed (up adds the value, down
subtracts the value).}} BWidget,ScrolledWindow,Frame,-bg {-bg background {} {} Colortype {} {}} BWidget,LabelEntry,LabelEntry,-label {-label label label {} Entrytype {} {**Label**     A string to display as a label for the scale. For vertical
scales the label is displayed just to the right of the top end of the scale.
For horizontal scales the label is displayed just above the left end of the
scale. If the option is specified as an empty string, no label is displayed.}} Tk,entry,Entry,-state {-state state State normal Listtype {disabled normal readonly} {Specifies one of three states for the entry: **normal** ,
**disabled** , or **readonly**. If the entry is readonly, then the value may
not be changed using widget commands and no insertion cursor will be
displayed, even if the input focus is in the widget; the contents of the
widget may still be selected. If the entry is disabled, the value may not be
changed, no insertion cursor will be displayed, the contents will not be
selectable, and the entry may be displayed in a different color, depending on
the values of the **-disabledforeground** and **-disabledbackground** options.}} BWidget,Entry,Entry,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} BWidget,ComboBox,ComboBox,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Label,Label,-height {-height height Height 0 Integertype {} {Specifies a desired height for the label. If an image or bitmap is being displayed in the label then the value is in screen units, for text it is in lines of text. If this option isn't specified, the label's desired height is computed from the size of the image or bitmap or text being displayed in it.
Option not available for _themed_ widgets.}} Tk,tablelist::tablelist,Tablelist,-labelheight {-labelheight labelHeight Height 0 Integertype {} {}} Tk,message,Message,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,ListBox,ListBox,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,tablelist::tablelist,Tablelist,-customdragsource {-customdragsource customDragSource CustomDragSource 0 Listtype {True False} {}} BWidget,ScrollableFrame,Canvas,-bg {-bg background {} {} Entrytype {} {}} Tk,toplevel,Toplevel,-colormap {-colormap colormap Colormap {} ? {} {Specifies a colormap to use for the window. The value may be
either **new** , in which case a new colormap is created for the window and
its children, or the name of another window (which must be on the same screen
and have the same visual as _pathName_ ), in which case the new window will
use the colormap from the specified window. If the **-colormap** option is not
specified, the new window uses the default colormap of its screen. This option
may not be changed with the **configure** widget command.}} BWidget,ArrowButton,ArrowButton,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,ScrolledWindow,Frame,-auto {-auto auto auto both Listtype {none both vertical horizontal} {Specifies the desired auto managed scrollbar:
* **none** means scrollbar are always drawn
* **horizontal** means horizontal scrollbar is drawn as needed
* **vertical** means vertical scrollbar is drawn as needed
* **both** means horizontal and vertical scrollbars are drawn as needed (default value)}} BWidget,ComboBox,ComboBox,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,button,Button,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,tablelist::tablelist,Tablelist,-protecttitlecolumns {-protecttitlecolumns protectTitleColumns ProtectTitleColumns 0 Listtype {True False} {}} BWidget,Button,Button,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,LabelEntry,LabelEntry,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} Tk,listbox,Listbox,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,ArrowButton,ArrowButton,-bg {-bg background {} {} Colortype {} {}} Tk,ttk::entry,TEntry,-width {-width width Width 20 Integertype {} {Specifies an integer value indicating the desired width of the
entry window, in average-size characters of the widget's font.}} Tk,tablelist::tablelist,Tablelist,-snipstring {-snipstring snipString SnipString ... Entrytype {} {}} Tk,scale,Scale,-orient {-orient orient Orient vertical Listtype {horizontal vertical} {Specifies the orientation of the button box. If this option is **horizontal** (the default), buttons are added from top to bottom. If this option is **vertical** , buttons are added from left to right.}} BWidget,Entry,Entry,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,LabelFrame,LabelFrame,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this page. See also [DynamicHelp](DynamicHelp.html).}} BWidget,SpinBox,SpinBox,-readonlybackground {-readonlybackground readonlyBackground ReadonlyBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the entry is readonly. If this option is the
empty string, the normal background color is used.}} Tk,ttk::treeview,Treeview,-yscrollcommand {-yscrollcommand yScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with vertical scrollbars. This option is treated in the same
way as the **-xscrollcommand** option, except that it is used for vertical
scrollbars and is provided by widgets that support vertical scrolling. See the
description of **-xscrollcommand** for details on how this option is used.}} Tk,frame,Frame,-class {-class class Class Frame ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. The **-class** option may
not be changed with the **configure** widget command.}} BWidget,Tree,Tree,-takefocus {-takefocus takeFocus TakeFocus 1 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,Button,Button,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,tablelist::tablelist,Tablelist,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,labelframe,Labelframe,-width {-width width Width 0 Integertype {} {Specifies the desired width for the window in any of the forms
acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If this option is
less than or equal to zero then the window will not request any size at all.}} Tk,entry,Entry,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,Button,Button,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,scrollbar,Scrollbar,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,scale,Scale,-tickinterval {-tickinterval tickInterval TickInterval 0 Floattype {} {Class: **TickInterval**     Must be a real value. Determines the spacing
between numerical tick marks displayed below or to the left of the slider. The
values will all be displayed with the same number of decimal places, which
will be enough to ensure they are all accurate to within 20% of a tick
interval. If 0, no tick marks will be displayed.}} Tk,panedwindow,Panedwindow,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,SpinBox,SpinBox,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} BWidget,ListBox,ListBox,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,checkbutton,Checkbutton,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 1 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,ListBox,ListBox,-dragtype {-dragtype dragtype dragtype LISTBOX_ITEM Entrytype {} {Specifies an alternate type of dragged object.}} Tk,panedwindow,Panedwindow,-proxybackground {-proxybackground proxyBackground ProxyBackground {} Colortype {} {Database Class: **ProxyBackground**     Background color to use when drawing
the proxy. If an empty string, the value of the **-background** option will be
used.}} BWidget,PanelFrame,PanelFrame,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,text,Text,-wrap {-wrap wrap Wrap char Listtype {char none word} {Specifies how to handle lines in the text that are too long to be displayed in
a single line of the text's window. The value must be **none** or **char** or
**word**. A wrap mode of **none** means that each line of text appears as
exactly one line on the screen; extra characters that do not fit on the screen
are not displayed. In the other modes each line of text will be broken up into
several screen lines if necessary to keep all the characters visible. In
**char** mode a screen line break may occur after any character; in **word**
mode a line break will only be made at word boundaries.}} Tk,panedwindow,Panedwindow,-opaqueresize {-opaqueresize opaqueResize OpaqueResize 1 Listtype {True False} {Specifies whether panes should be resized as a
sash is moved (true), or if resizing should be deferred until the sash is
placed (false). In the latter case, a "ghost" version of the sash is displayed
during the resizing to show where the panes will be resized to when releasing
the mouse button. This "ghost" version of the sash is the proxy. It's
rendering can be configured using the **-proxybackground** ,
**-proxyborderwidth** and **-proxyrelief** options.}} BWidget,Entry,Entry,-droptypes {-droptypes droptypes droptypes {TEXT    {move {}}
        FGCOLOR {move {}}
        BGCOLOR {move {}}
        COLOR   {move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation. Default accepts _FGCOLOR_ , _COLOR_ , _BGCOLOR_ and _TEXT_ , all with **copy** and **move** operations.}} BWidget,SpinBox,SpinBox,-insertontime {-insertontime insertOnTime OnTime 600 Integertype {} {Specifies a non-negative integer value indicating the
number of milliseconds the insertion cursor should remain "on" in each blink
cycle.}} BWidget,Tree,Tree,-crossopenimage {-crossopenimage crossopenimage crossopenimage {} Entrytype {} {Specifies an image to be displayed in place of the standard cross when a node is open. Overrides the -crossopenbitmap option.}} Tk,ttk::spinbox,TSpinbox,-font {-font font Font TkTextFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,canvas,Canvas,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} Tk,labelframe,Labelframe,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} BWidget,Button,Button,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,ttk::separator,TSeparator,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,labelframe,Labelframe,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,tablelist::tablelist,Tablelist,-labelfg {-labelfg -labelforeground {} {} Colortype {} {}} Tk,ttk::spinbox,TSpinbox,-format {-format format Format {} Entrytype {} {Specifies an alternate format to use when setting the string
value when using the **-from** and **-to** range. This must be a format
specifier of the form **% <pad>.<pad>f**, as it will format a floating-point
number.}} Tk,ttk::treeview,Treeview,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,Entry,Entry,-disabledbackground {-disabledbackground disabledBackground DisabledBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the spinbox is disabled. If this option is
the empty string, the normal background color is used.}} Tk,ttk::treeview,Treeview,-padding {-padding padding Pad {} Entrytype {} {Specifies the amount of extra space to add between the
notebook and this pane. Syntax is the same as for the widget **-padding**
option.}} Tk,entry,Entry,-width {-width width Width 20 Integertype {} {Specifies an integer value indicating the desired width of the
entry window, in average-size characters of the widget's font. If the value is
less than or equal to zero, the widget picks a size just large enough to hold
its current text.}} BWidget,SpinBox,SpinBox,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.
If **dragendcmd** is empty, the internal _dragend_ command updates the entry
following the operation ( **move** or **copy** ) and the dragged data (whole
or selected part of the entry).}} Tk,ttk::labelframe,TLabelframe,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,tablelist::tablelist,Tablelist,-tight {-tight tight Tight 0 Listtype {True False} {}} BWidget,Dialog,Dialog,-separator {-separator separator separator 0 Entrytype {} {Specifies wether or not to draw a separator between the user frame and the ButtonBox.}} Tk,tablelist::tablelist,Tablelist,-labelcommand2 {-labelcommand2 labelCommand2 LabelCommand2 {} Entrytype {} {}} Tk,panedwindow,Panedwindow,-orient {-orient orient Orient horizontal Listtype {horizontal vertical} {Specifies the orientation of the button box. If this option is **horizontal** (the default), buttons are added from top to bottom. If this option is **vertical** , buttons are added from left to right.}} BWidget,LabelFrame,LabelFrame,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,ArrowButton,ArrowButton,-fg {-fg foreground {} {} Colortype {} {}} BWidget,LabelEntry,LabelEntry,-name {-name name name {} Entrytype {} {Specifies a standard name for the label. If the option *** _name_ Name** is found in the resource database, then **text** and **underline** options are extracted from its value.}} BWidget,SpinBox,SpinBox,-insertofftime {-insertofftime insertOffTime OffTime 300 Integertype {} {Specifies a non-negative integer value
indicating the number of milliseconds the insertion cursor should remain "off"
in each blink cycle. If this option is zero then the cursor does not blink: it
is on all the time.}} Tk,toplevel,Toplevel,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,spinbox,Spinbox,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to invoke whenever a spinbutton is
invoked. The command recognizes several percent substitutions: **%W** for the
widget path, **%s** for the current value of the widget, and **%d** for the
direction of the button pressed ( **up** or **down** ).}} Tk,spinbox,Spinbox,-invcmd {-invcmd -invalidcommand {} {} Entrytype {} {}} Tk,scale,Scale,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,NoteBook,NoteBook,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,ScrollView,Canvas,-foreground {-foreground foreground Foreground black Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,Separator,Separator,-relief {-relief relief Relief groove Listtype {ridge groove} {Specifies the relief of the Separator. Must be **groove** (the default) or **ridge**.}} Tk,button,Button,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,NoteBook,NoteBook,-tabbevelsize {-tabbevelsize tabbevelsize tabbevelsize 0 Integertype {} {Specifies the amount of bevel the tabs should have. This value can be adjusted from 0 to 8 pixels with the default being 0 pixels. A zero pixel bevel is essentially rectangular while non-zero bevel size will look trapezoidal.}} Tk,menubutton,Menubutton,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,canvas,Canvas,-xscrollincrement {-xscrollincrement xScrollIncrement ScrollIncrement 0 Integertype {} {Specifies an increment for horizontal
scrolling, in any of the usual forms permitted for screen distances. If the
value of this option is greater than zero, the horizontal view in the window
will be constrained so that the canvas x coordinate at the left edge of the
window is always an even multiple of **xScrollIncrement** ; furthermore, the
units for scrolling (e.g., the change in view when the left and right arrows
of a scrollbar are selected) will also be **xScrollIncrement**. If the value
of this option is less than or equal to zero, then horizontal scrolling is
unconstrained.}} Tk,spinbox,Spinbox,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Specifies whether or not a selection
in the widget should also be the X selection. The value may have any of the
forms accepted by **[Tcl_GetBoolean](../TclLib/GetInt.htm)** , such as
**true** , **false** , **0** , **1** , **yes** , or **no**. If the selection
is exported, then selecting in the widget deselects the current X selection,
selecting outside the widget deselects any widget selection, and the widget
will respond to selection retrieval requests when it has a selection. The
default is usually for widgets to export selections.}} BWidget,ScrollableFrame,Canvas,-yscrollincrement {-yscrollincrement yScrollIncrement ScrollIncrement 0 Integertype {} {See **yscrollincrement** option of **canvas** widget.}} BWidget,Tree,Tree,-dropcmd {-dropcmd dropcmd dropcmd {} Entrytype {} {Tree has a command wrapper for _drop_ events. This command stops auto scrolling and extract node and position.
If **dropcmd** is not empty, it is called with the following arguments:}} BWidget,LabelEntry,LabelEntry,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,NoteBook,NoteBook,-height {-height height Height 0 Integertype {} {Specifies the desired height for the pages. If this option is equal to zero (the default) then the window will not request any size at all. In this case, user may want to call NoteBook:: **compute_size** to make NoteBook larger enough to contains the largest page.}} Tk,radiobutton,Radiobutton,-compound {-compound compound Compound none Listtype {bottom center left none right top} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,checkbutton,Checkbutton,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to associate with the button. This
command is typically invoked when mouse button 1 is released over the button
window. The button's global variable ( **-variable** option) will be updated
before the command is invoked.}} BWidget,Label,Label,-helptext {-helptext helptext helptext {} Entrytype {} {Text for dynamic help. If empty, no help is available for this widget. See also [DynamicHelp](DynamicHelp.html).}} Tk,scrollbar,Scrollbar,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 100 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} BWidget,Button,Button,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,ttk::frame,TFrame,-relief {-relief relief Relief {} Entrytype {} {**Relief**     One of the standard Tk border styles: **flat** , **groove** ,
**raised** , **ridge** , **solid** , or **sunken**. Defaults to **flat**.}} BWidget,Tree,Tree,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} BWidget,Label,Label,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,ButtonBox,ButtonBox,-state {-state state State normal Listtype {normal disabled} {Specifies a state for all the buttons in the button box. Can be any state supported by buttons.}} BWidget,LabelFrame,LabelFrame,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,Dialog,Dialog,-cancel {-cancel cancel cancel -1 Integertype {} {Specifies the number of the cancel button of the Dialog. When user presses Esc or the windows close button, this button is invoked.
If set to **-1** , Esc does not invoke anything. The window close button
_destroys_ the dialog in this case and returns **-1**.}} BWidget,Tree,Tree,-opencmd {-opencmd opencmd opencmd {} Entrytype {} {Specifies a command to be called when the user opens a node. The name of the opened node is appended to the command.}} BWidget,LabelFrame,LabelFrame,-bg {-bg background {} {} Colortype {} {}} BWidget,SpinBox,SpinBox,-show {-show show Show {} Entrytype {} {A list containing zero or more of the following values, specifying which
elements of the tree to display.}} Tk,scale,Scale,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,message,Message,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,checkbutton,Checkbutton,-tristateimage {-tristateimage tristateImage TristateImage {} Entrytype {} {Specifies an image to display (in place
of the **-image** option) when the checkbutton is in tri-state mode. This
option is ignored unless the **-image** option has been specified.}} Tk,ttk::combobox,TCombobox,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the name of a global variable whose
value is linked to the widget value. Whenever the variable changes value the
widget value is updated, and vice versa.}} Tk,message,Message,-justify {-justify justify Justify left Listtype {left right center} {Specifies how to justify lines of text. Must be one of
**left** , **center** , or **right**. Defaults to **left**. This option works
together with the **-anchor** , **-aspect** , **-padx** , **-pady** , and
**-width** options to provide a variety of arrangements of the text within the
window. The **-aspect** and **-width** options determine the amount of screen
space needed to display the text. The **-anchor** , **-padx** , and **-pady**
options determine where this rectangular area is displayed within the widget's
window, and the **-justify** option determines how each line is displayed
within that rectangular region. For example, suppose **-anchor** is **e** and
**-justify** is **left** , and that the message window is much larger than
needed for the text. The text will be displayed so that the left edges of all
the lines line up and the right edge of the longest line is **-padx** from the
right side of the window; the entire text block will be centered in the
vertical span of the window.}} Tk,checkbutton,Checkbutton,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,ProgressBar,ProgressBar,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,ComboBox,ComboBox,-show {-show show Show {} Entrytype {} {A list containing zero or more of the following values, specifying which
elements of the tree to display.}} Tk,scale,Scale,-to {-to to To 100 Floattype {} {Specifies a real value corresponding to the right or bottom end of the scale.
This value may be either less than or greater than the **-from** option.}} BWidget,ProgressBar,ProgressBar,-bg {-bg background {} {} Entrytype {} {}} BWidget,ArrowButton,ArrowButton,-arrowbd {-arrowbd arrowbd arrowbd 1 Integertype {} {When ArrowButton **type** is _arrow_ , specifies the border width of the arrow. Must be 1 or 2.}} Tk,ttk::spinbox,TSpinbox,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,tablelist::tablelist,Tablelist,-state {-state state State normal Listtype {disabled normal} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,ttk::entry,TEntry,-validate {-validate validate Validate none Listtype {all key focus focusin focusout none} {Specifies the mode in which validation should operate:
**none** , **focus** , **focusin** , **focusout** , **key** , or **all**.
Default is **none** , meaning that validation is disabled. See **VALIDATION**
below.}} BWidget,PanedWindow,PanedWindow,-weights {-weights weights weights extra Entrytype {} {Specifies how the weights specified when adding panes should be used. Must be **extra** or **available**. When using _extra_ , only extra space is devided among the diffferent panes relative to their weight. When using _available_ , all space is devided among the diffferent panes relative to their weight. Default value for **weights** is _extra_.}} Tk,text,Text,-setgrid {-setgrid setGrid SetGrid 0 Listtype {True False} {Specifies a boolean value that determines whether this widget
controls the resizing grid for its top-level window. This option is typically
used in text widgets, where the information in the widget has a natural size
(the size of a character) and it makes sense for the window's dimensions to be
integral numbers of these units. These natural window sizes form a grid. If
the **-setgrid** option is set to true then the widget will communicate with
the window manager so that when the user interactively resizes the top-level
window that contains the widget, the dimensions of the window will be
displayed to the user in grid units and the window size will be constrained to
integral numbers of grid units. See the section **GRIDDED GEOMETRY
MANAGEMENT** in the **[wm](../TkCmd/wm.htm)** manual entry for more details.}} BWidget,MainFrame,Frame,-progressfg {-progressfg progressfg Foreground blue Colortype {} {}} Tk,panedwindow,Panedwindow,-showhandle {-showhandle showHandle ShowHandle 0 Listtype {True False} {Specifies whether sash handles should be shown. May
be any valid Tcl boolean value.}} Tk,entry,Entry,-validatecommand {-validatecommand validateCommand ValidateCommand {} Entrytype {} {Specifies a script
to eval when you want to validate the input into the entry widget. Setting it
to {} disables this feature (the default). This command must return a valid
Tcl boolean value. If it returns 0 (or the valid Tcl boolean equivalent) then
it means you reject the new edition and it will not occur and the
**-invalidcommand** will be evaluated if it is set. If it returns 1, then the
new edition occurs. See **VALIDATION** below for more information.}} BWidget,Button,Button,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,message,Message,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} BWidget,LabelFrame,LabelFrame,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,ttk::progressbar,TProgressbar,-length {-length length Length 100 Integertype {} {Specifies the length of the long axis of the progress bar
(width if horizontal, height if vertical).}} BWidget,ComboBox,ComboBox,-dragenabled {-dragenabled dragenabled dragenabled 0 Listtype {True False} {A boolean specifying if drag is enabled.}} Tk,checkbutton,Checkbutton,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,ttk::combobox,TCombobox,-xscrollcommand {-xscrollcommand xScrollCommand ScrollCommand {} Entrytype {} {Specifies the prefix for a command used
to communicate with horizontal scrollbars. When the view in the widget's
window changes (or whenever anything else occurs that could change the display
in a scrollbar, such as a change in the total size of the widget's contents),
the widget will generate a Tcl command by concatenating the scroll command and
two numbers. Each of the numbers is a fraction between 0 and 1, which
indicates a position in the document. 0 indicates the beginning of the
document, 1 indicates the end, .333 indicates a position one third the way
through the document, and so on. The first fraction indicates the first
information in the document that is visible in the window, and the second
fraction indicates the information just after the last portion that is
visible. The command is then passed to the Tcl interpreter for execution.
Typically the **-xscrollcommand** option consists of the path name of a
scrollbar widget followed by "set", e.g. ".x.scrollbar set": this will cause
the scrollbar to be updated whenever the view in the window changes. If this
option is not specified, then no command will be executed.}} BWidget,ProgressBar,ProgressBar,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,SpinBox,SpinBox,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Tree,Tree,-showlines {-showlines showlines showlines 1 Listtype {True False} {Specifies whether or not lines should be drawn between nodes.}} Tk,ttk::label,TLabel,-foreground {-foreground textColor TextColor {} Colortype {} {Class: **TextColor**     The widget's foreground color. If unspecified, the
theme default is used.}} BWidget,Label,Label,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} BWidget,StatusBar,StatusBar,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,tablelist::tablelist,Tablelist,-columns {-columns columns Columns {} Entrytype {} {**Columns**     A list of column identifiers, specifying the number of columns
and their names.}} Tk,menu,Menu,-font {-font font Font TkMenuFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,entry,Entry,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,tablelist::tablelist,Tablelist,-editendcommand {-editendcommand editEndCommand EditEndCommand {} Entrytype {} {}} Tk,ttk::notebook,TNotebook,-width {-width width Width 0 Integertype {} {**Width**     If present and greater than zero, specifies the desired width of
the pane area (not including internal padding). Otherwise, the maximum width
of all panes is used.}} Tk,ttk::spinbox,TSpinbox,-increment {-increment increment Increment 1 Floattype {} {**Increment**     A floating-point value specifying the change in value to be
applied each time one of the widget spin buttons is pressed. The up button
applies a positive increment, the down button applies a negative increment.}} Tk,canvas,Canvas,-bd {-bd borderWidth {} {} Integertype {} {}} Tk,tablelist::tablelist,Tablelist,-stripebackground {-stripebackground stripeBackground Background {} Colortype {} {}} Tk,panedwindow,Panedwindow,-relief {-relief relief Relief flat Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,menu,Menu,-postcommand {-postcommand postCommand Command {} Entrytype {} {Class: **Command**     If this option is specified then it provides a Tcl
command to execute each time the menu is posted. The command is invoked by the
**post** widget command before posting the menu. Note that in Tk 8.0 on
Macintosh and Windows, all post-commands in a system of menus are executed
before any of those menus are posted. This is due to the limitations in the
individual platforms' menu managers.}} BWidget,SpinBox,SpinBox,-entrybg {-entrybg entrybg Background #ffffff Colortype {} {}} Tk,text,Text,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,message,Message,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} BWidget,SpinBox,SpinBox,-modifycmd {-modifycmd modifycmd modifycmd {} Entrytype {} {Specifies a Tcl command called when the user modify the value of the SpinBox.}} Tk,canvas,Canvas,-bg {-bg background {} {} Colortype {} {}} BWidget,LabelFrame,LabelFrame,-fg {-fg foreground {} {} Colortype {} {}} Tk,toplevel,Toplevel,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,Entry,Entry,-dragtype {-dragtype dragtype dragtype {} Entrytype {} {Specifies an alternate type of dragged object.}} Tk,ttk::scale,TScale,-state {-state state State normal Entrytype {} {Specifies one of three states for the menubutton: **normal** ,
**active** , or **disabled**. In normal state the menubutton is displayed
using the **foreground** and **background** options. The active state is
typically used when the pointer is over the menubutton. In active state the
menubutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the menubutton should
be insensitive: the default bindings will refuse to activate the widget and
will ignore mouse button presses. In this state the **-disabledforeground**
and **-background** options determine how the button is displayed.}} Tk,checkbutton,Checkbutton,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the checkbutton: **normal** ,
**active** , or **disabled**. In normal state the checkbutton is displayed
using the **-foreground** and **-background** options. The active state is
typically used when the pointer is over the checkbutton. In active state the
checkbutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the checkbutton
should be insensitive: the default bindings will refuse to activate the widget
and will ignore mouse button presses. In this state the
**-disabledforeground** and **-background** options determine how the
checkbutton is displayed.}} BWidget,ListBox,ListBox,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {LsitBox has a command wrapper for _drag-over_ events. This command enables auto scrolling and position extraction during the _drag-over_. If **dropovercmd** is not empty, the command is called with the following aguments:}} Tk,text,Text,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,radiobutton,Radiobutton,-state {-state state State normal Listtype {active disabled normal} {Specifies one of three states for the radiobutton: **normal** ,
**active** , or **disabled**. In normal state the radiobutton is displayed
using the **-foreground** and **-background** options. The active state is
typically used when the pointer is over the radiobutton. In active state the
radiobutton is displayed using the **-activeforeground** and
**-activebackground** options. Disabled state means that the radiobutton
should be insensitive: the default bindings will refuse to activate the widget
and will ignore mouse button presses. In this state the
**-disabledforeground** and **-background** options determine how the
radiobutton is displayed.}} BWidget,ProgressBar,ProgressBar,-fg {-fg foreground {} {} Colortype {} {}} BWidget,Entry,Entry,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} BWidget,ComboBox,ComboBox,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} BWidget,ArrowButton,ArrowButton,-helpcmd {-helpcmd helpcmd helpcmd {} Entrytype {} {If specified, refers to a command to execute to get the help text to display. The command must return a string to display. If the command returns an empty string, no help is displayed. See also [DynamicHelp](DynamicHelp.html).}} BWidget,MainFrame,Frame,-separator {-separator separator separator both Entrytype {} {Specifies if separator should be drawn at the top and/or at the bottom of the user window. Must be one of the values **none** , **top** , **bottom** or **both**. It depends on the relief of subwidgets of user window.}} Tk,ttk::spinbox,TSpinbox,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,radiobutton,Radiobutton,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} BWidget,Button,Button,-default {-default default Default disabled Listtype {active disabled normal} {Specifies one of three states for the default ring: **normal** , **active** , or **disabled**. In active state, the button is drawn with the platform specific appearance for a default button. In normal state, the button is drawn with the platform specific appearance for a non-default button, leaving enough space to draw the default button appearance. The normal and active states will result in buttons of the same size. In disabled state, the button is drawn with the non-default button appearance without leaving space for the default appearance. The disabled state may result in a smaller button than the active state.}} BWidget,LabelEntry,LabelEntry,-editable {-editable editable editable 1 Listtype {True False} {Specifies whether the Entry is editable by the user. Equivalent to the **state** option of the Tk entry widget.}} Tk,ttk::notebook,TNotebook,-height {-height height Height 0 Integertype {} {**Height**     If present and greater than zero, specifies the desired height
of the pane area (not including internal padding or tabs). Otherwise, the
maximum height of all panes is used.}} Tk,ttk::spinbox,TSpinbox,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,tablelist::tablelist,Tablelist,-width {-width width Width 20 Integertype {} {Specifies the width of the button of the sash. This option is ignored if the activator is set to **line**.}} Tk,radiobutton,Radiobutton,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,ListBox,ListBox,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.}} Tk,frame,Frame,-colormap {-colormap colormap Colormap {} ? {} {Specifies a colormap to use for the window. The value may be
either **new** , in which case a new colormap is created for the window and
its children, or the name of another window (which must be on the same screen
and have the same visual as _pathName_ ), in which case the new window will
use the colormap from the specified window. If the **-colormap** option is not
specified, the new window uses the same colormap as its parent. This option
may not be changed with the **configure** widget command.}} Tk,canvas,Canvas,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,text,Text,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,menubutton,Menubutton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,ScrolledWindow,Frame,-ipad {-ipad ipad ipad 1 Entrytype {} {Padding in pixels between client widget and scrollbars. Default value: **1**.}} Tk,ttk::scale,TScale,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::panedwindow,TPanedwindow,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,entry,Entry,-takefocus {-takefocus takeFocus TakeFocus {} Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} BWidget,ComboBox,ComboBox,-dragtype {-dragtype dragtype dragtype {} Entrytype {} {Specifies an alternate type of dragged object.}} Tk,toplevel,Toplevel,-padx {-padx padX Pad 0 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,text,Text,-bg {-bg -background {} {} Colortype {} {}} Tk,tablelist::tablelist,Tablelist,-showlabels {-showlabels showLabels ShowLabels 1 Listtype {True False} {}} Tk,toplevel,Toplevel,-pady {-pady padY Pad 0 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} Tk,scrollbar,Scrollbar,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,ttk::labelframe,TLabelframe,-width {-width width Width 0 Integertype {} {**Width**     If specified, the widget's requested width in pixels.}} Tk,checkbutton,Checkbutton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,frame,Frame,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,Dialog,Dialog,-default {-default default Default -1 Integertype {} {Specifies the number of the default button of the Dialog. When user press Return in the Dialog, this button is invoked.}} BWidget,SpinBox,SpinBox,-entryfg {-entryfg entryfg Foreground #000000 Colortype {} {}} Tk,tablelist::tablelist,Tablelist,-labelborderwidth {-labelborderwidth labelBorderWidth BorderWidth 1 Integertype {} {}} Tk,ttk::radiobutton,TRadiobutton,-compound {-compound compound Compound {} Listtype {none text image center top bottom left right} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,spinbox,Spinbox,-repeatdelay {-repeatdelay repeatDelay RepeatDelay 400 Integertype {} {Specifies the number of milliseconds a button or
key must be held down before it begins to auto-repeat. Used, for example, on
the up- and down-arrows in scrollbars.}} BWidget,TitleFrame,TitleFrame,-relief {-relief relief Relief groove Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,SpinBox,SpinBox,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ (the default for a NoteBook page) or _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,labelframe,Labelframe,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ComboBox,ComboBox,-hottrack {-hottrack hottrack hottrack 0 Listtype {True False} {The selection in the drop down listbox will follow the mouse cursor as it moves.}} Tk,ttk::menubutton,TMenubutton,-compound {-compound compound Compound {} Listtype {none text image center top bottom left right} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,checkbutton,Checkbutton,-bd {-bd -borderwidth {} {} Integertype {} {}} Tk,ttk::panedwindow,TPanedwindow,-width {-width width Width 0 Integertype {} {**Width**     If present and greater than zero, specifies the desired width of
the widget in pixels. Otherwise, the requested width is determined by the
width of the managed windows.}} BWidget,Label,Label,-highlightthickness {-highlightthickness highlightThickness HighlightThickness 0 Integertype {} {Specifies a
non-negative value indicating the width of the highlight rectangle to draw
around the outside of the widget when it has the input focus. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If the value is zero, no focus
highlight is drawn around the widget.}} Tk,ttk::checkbutton,TCheckbutton,-compound {-compound compound Compound {} Listtype {none text image center top bottom left right} {Specifies if the widget should display text and
bitmaps/images at the same time, and if so, where the bitmap/image should be
placed relative to the text. Must be one of the values **none** , **bottom** ,
**top** , **left** , **right** , or **center**. For example, the (default)
value **none** specifies that the bitmap or image should (if defined) be
displayed instead of the text, the value **left** specifies that the bitmap or
image should be displayed to the left of the text, and the value **center**
specifies that the bitmap or image should be displayed on top of the text.}} Tk,checkbutton,Checkbutton,-width {-width width Width 0 Integertype {} {Specifies a desired width for the button. If an image or bitmap
is being displayed in the button then the value is in screen units (i.e. any
of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for
text it is in characters. If this option is not specified, the button's
desired width is computed from the size of the image or bitmap or text being
displayed in it.}} BWidget,ArrowButton,ArrowButton,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,checkbutton,Checkbutton,-bg {-bg -background {} {} Colortype {} {}} Tk,radiobutton,Radiobutton,-width {-width width Width 0 Integertype {} {Specifies a desired width for the button. If an image or bitmap
is being displayed in the button, the value is in screen units (i.e. any of
the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)** ); for text
it is in characters. If this option is not specified, the button's desired
width is computed from the size of the image or bitmap or text being displayed
in it.}} Tk,panedwindow,Panedwindow,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Tree,Tree,-offset {-offset offset Offset 0,0 Entrytype {} {}} BWidget,Tree,Tree,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} Tk,tablelist::tablelist,Tablelist,-resizecursor {-resizecursor resizeCursor ResizeCursor sb_h_double_arrow Entrytype {} {}} Tk,scrollbar,Scrollbar,-width {-width width Width 11 Integertype {} {Specifies the desired narrow dimension of the scrollbar window,
not including 3-D border, if any. For vertical scrollbars this will be the
width and for horizontal scrollbars this will be the height. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,menu,Menu,-relief {-relief relief Relief raised Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} Tk,checkbutton,Checkbutton,-padx {-padx padX Pad 1 Integertype {} {Specifies distance between image or window and text of the items.}} Tk,ttk::spinbox,TSpinbox,-style {-style style Style {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-highlightcolor {-highlightcolor highlightColor HighlightColor #000000 Colortype {} {Specifies the color to use for the
traversal highlight rectangle that is drawn around the widget when it has the
input focus.}} Tk,checkbutton,Checkbutton,-pady {-pady padY Pad 1 Integertype {} {Specifies a default value for the -pady option of all added buttons.
Option has no effect for _themed_ wigets.}} Tk,entry,Entry,-cursor {-cursor cursor Cursor xterm Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,ttk::progressbar,TProgressbar,-value {-value value Value 0.0 Floattype {} {**Value**     The current value of the progress bar. In _determinate_ mode,
this represents the amount of work completed. In _indeterminate_ mode, it is
interpreted modulo **-maximum** ; that is, the progress bar completes one
"cycle" when the **-value** increases by **-maximum**. If **-variable** is set
to an existing variable, specifying **-value** has no effect (the variable
value takes precedence).}} Tk,radiobutton,Radiobutton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,StatusBar,StatusBar,-showresizesep {-showresizesep showresizesep showresizesep 0 Listtype {True False} {}} Tk,menubutton,Menubutton,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} BWidget,SpinBox,SpinBox,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} BWidget,LabelEntry,LabelEntry,-side {-side side side left Entrytype {} {Specifies where to draw the ButtonBox relative to the user frame. Must be one of **top** , **left** , **bottom** or **right**.}} BWidget,Button,Button,-helpvar {-helpvar helpvar helpvar {} Entrytype {} {Variable to use when **helptype** option is _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,ttk::frame,TFrame,-height {-height height Height 0 Integertype {} {**Height**     If specified, the widget's requested height in pixels.}} BWidget,Button,Button,-helptype {-helptype helptype helptype balloon Listtype {balloon variable} {Type of dynamic help. Use _balloon_ or _variable_. See also [DynamicHelp](DynamicHelp.html).}} Tk,frame,Frame,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,toplevel,Toplevel,-borderwidth {-borderwidth borderWidth BorderWidth 0 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,scale,Scale,-from {-from from From 0 Floattype {} {A real value corresponding to the left or top end of the scale.}} Tk,ttk::combobox,TCombobox,-exportselection {-exportselection exportSelection ExportSelection 1 Listtype {True False} {Database Class: **ExportSelection**     Boolean value. If set, the widget
selection is linked to the X selection.}} Tk,text,Text,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,menu,Menu,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,scale,Scale,-repeatinterval {-repeatinterval repeatInterval RepeatInterval 100 Integertype {} {Database Class: **RepeatInterval**     Used in conjunction with
**-repeatdelay** : once auto-repeat begins, this option determines the number
of milliseconds between auto-repeats.}} Tk,ttk::radiobutton,TRadiobutton,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,text,Text,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,Label,Label,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,PanedWindow,PanedWindow,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,panedwindow,Panedwindow,-proxyborderwidth {-proxyborderwidth proxyBorderWidth ProxyBorderWidth 2 Integertype {} {Specifies the borderwidth of the
proxy. May be any value accepted by
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,tablelist::tablelist,Tablelist,-movablerows {-movablerows movableRows MovableRows 0 Listtype {True False} {}} BWidget,StatusBar,StatusBar,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,tablelist::tablelist,Tablelist,-arrowcolor {-arrowcolor arrowColor ArrowColor black Entrytype {} {}} Tk,ttk::label,TLabel,-font {-font font Font {} Fonttype {} {Font to use for label text.}} Tk,labelframe,Labelframe,-takefocus {-takefocus takeFocus TakeFocus 0 Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,scrollbar,Scrollbar,-activebackground {-activebackground activeBackground Foreground #ececec Colortype {} {Specifies background color to use when
drawing active elements. An element (a widget or portion of a widget) is
active if the mouse cursor is positioned over the element and pressing a mouse
button will cause some action to occur. If strict Motif compliance has been
requested by setting the **tk_strictMotif** variable, this option will
normally be ignored; the normal background color will be used instead. For
some elements on Windows and Macintosh systems, the active color will only be
used while mouse button 1 is pressed over the element.}} Tk,ttk::button,TButton,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,scrollbar,Scrollbar,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,Tree,Tree,-crossopenbitmap {-crossopenbitmap crossopenbitmap crossopenbitmap {} Entrytype {} {Specifies a bitmap to be displayed in place of the standard cross when a node is open.}} BWidget,ListBox,ListBox,-offset {-offset offset Offset 0,0 Entrytype {} {}} BWidget,Label,Label,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,MainFrame,Frame,-statusbarfont {-statusbarfont statusbarfont statusbarfont {} Entrytype {} {}} BWidget,ProgressBar,ProgressBar,-width {-width width Width 100 Integertype {} {Specifies the desired width for the progress indicator.}} BWidget,Entry,Entry,-invcmd {-invcmd invalidCommand {} {} Entrytype {} {}} Tk,ttk::progressbar,TProgressbar,-variable {-variable variable Variable {} Entrytype {} {**Variable**     The name of a global Tcl variable which is linked to the
**-value**. If specified to an existing variable, the **-value** of the
progress bar is automatically set to the value of the variable whenever the
latter is modified.}} Tk,scale,Scale,-sliderlength {-sliderlength sliderLength SliderLength 30 Integertype {} {Specifies the size of the slider, measured in
screen units along the slider's long dimension. The value may be specified in
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,Entry,Entry,-insertborderwidth {-insertborderwidth insertBorderWidth BorderWidth 0 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around the insertion cursor. The value may
have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} BWidget,ButtonBox,ButtonBox,-default {-default default Default -1 Integertype {} {Specifies the default button of the button box. The value is an integer referencing the n-th added button, starting from 0. If this value is -1 (the default), all button wil be drawn with their -default option set to disabled, and this value can not be changed.
If this value is not -1, the associated button is drawn with -default option
set to active and the others are drawn with -default option set to normal. The
value can be changed by configure.}} Tk,entry,Entry,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,ttk::button,TButton,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,scale,Scale,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,Entry,Entry,-dropovercmd {-dropovercmd dropovercmd dropovercmd {} Entrytype {} {Entry has a command wrapper for _drag-over_ events. This command enables auto scrolling and position extraction during the _drag-over_.
If **dropovercmd** is empty, the wrapper accepts the drop if **editable**
option is true and **state** option is normal.
If **dropovercmd** is not empty, it is called with the following arguments:}} Tk,tablelist::tablelist,Tablelist,-populatecommand {-populatecommand populateCommand PopulateCommand {} Entrytype {} {}} Tk,ttk::label,TLabel,-underline {-underline underline Underline -1 Integertype {} {Specifies the integer index (0-based) of a character to
underline in the text string. The underlined character is used for mnemonic
activation if **ttk::notebook::enableTraversal** is called.}} Tk,checkbutton,Checkbutton,-fg {-fg -foreground {} {} Colortype {} {}} BWidget,ProgressBar,ProgressBar,-troughcolor {-troughcolor troughColor Background #b3b3b3 Colortype {} {Specifies the color to use for the rectangular
trough areas in widgets such as scrollbars and scales. This option is ignored
for scrollbars on Windows (native widget does not recognize this option).}} BWidget,Tree,Tree,-padx {-padx padX Pad 20 Integertype {} {Specifies the distance between image or window and the text of the node. If the value is -1, the node will be drawn with the padx for the entire tree.}} Tk,menubutton,Menubutton,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} Tk,listbox,Listbox,-selectforeground {-selectforeground selectForeground Background #000000 Colortype {} {Specifies the foreground color to use when
displaying selected items.}} Tk,ttk::treeview,Treeview,-height {-height height Height 10 Integertype {} {Specifies the number of rows which should be visible. Note: the
requested width is determined from the sum of the column widths.}} Tk,label,Label,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,tablelist::tablelist,Tablelist,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,LabelEntry,LabelEntry,-justify {-justify justify Justify left Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} BWidget,StatusBar,StatusBar,-height {-height height Height 18 Integertype {} {Specifies the desired height for the widget.}} BWidget,LabelEntry,LabelEntry,-labelfont {-labelfont labelfont Font TkDefaultFont Fonttype {} {}} Tk,ttk::sizegrip,TSizegrip,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,ttk::menubutton,TMenubutton,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} BWidget,LabelEntry,LabelEntry,-dragendcmd {-dragendcmd dragendcmd dragendcmd {} Entrytype {} {Specifies a command to be called when drag ended. **dragendcmd** must be a command conforming to the description of the option **dragendcmd** of **DragSite::[register](DragSite.html#register)**.
If **dragendcmd** is empty, the internal _dragend_ command updates the entry
following the operation ( **move** or **copy** ) and the dragged data (whole
or selected part of the entry).}} BWidget,LabelEntry,LabelEntry,-show {-show show Show {} Entrytype {} {A list containing zero or more of the following values, specifying which
elements of the tree to display.}} BWidget,ComboBox,ComboBox,-foreground {-foreground foreground Foreground #000000 Colortype {} {Specifies the color of the border of the rectangle.}} BWidget,ArrowButton,ArrowButton,-highlightbackground {-highlightbackground highlightBackground HighlightBackground #d9d9d9 Colortype {} {Specifies
the color to display in the traversal highlight region when the widget does
not have the input focus.}} BWidget,LabelFrame,LabelFrame,-focus {-focus focus focus {} Entrytype {} {Specifies a pathname to set the focus on for Label:: **setfocus** command.}} BWidget,Tree,Tree,-bd {-bd borderWidth {} {} Integertype {} {}} BWidget,LabelEntry,LabelEntry,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} Tk,menubutton,Menubutton,-bd {-bd -borderwidth {} {} Integertype {} {}} BWidget,Tree,Tree,-bg {-bg background {} {} Colortype {} {}} Tk,panedwindow,Panedwindow,-height {-height height Height {} Entrytype {} {Specifies a desired height for the overall panedwindow widget.
May be any value accepted by **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If an
empty string, the widget will be made high enough to allow all contained
widgets to have their natural height.}} Tk,tablelist::tablelist,Tablelist,-showbusycursor {-showbusycursor showBusyCursor ShowBusyCursor 1 Listtype {True False} {}} Tk,ttk::radiobutton,TRadiobutton,-style {-style style Style {} Entrytype {} {}} BWidget,ScrolledWindow,Frame,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} Tk,text,Text,-height {-height height Height 24 Integertype {} {Specifies the desired height for the window, in units of
characters in the font given by the **-font** option. Must be at least one.}} Tk,menubutton,Menubutton,-direction {-direction direction Direction below Listtype {above below flush left right} {Specifies where the menu is going to be popup up. **above**
tries to pop the menu above the menubutton. **below** tries to pop the menu
below the menubutton. **left** tries to pop the menu to the left of the
menubutton. **right** tries to pop the menu to the right of the menu button.
**[flush](../TclCmd/flush.htm)** pops the menu directly over the menubutton.
In the case of **above** or **below** , the direction will be reversed if the
menu would show offscreen.}} Tk,menubutton,Menubutton,-bg {-bg -background {} {} Colortype {} {}} Tk,label,Label,-textvariable {-textvariable textVariable Variable {} Entrytype {} {Specifies the textvariable option for the label of the status bar. [DynamicHelp](DynamicHelp.html) description of menu entries are mapped to this variable at the creation of the MainFrame. If this variable is changed by MainFrame::configure, menu description will not be available.
You change the text of the label by modifying the value of the variable.}} BWidget,Label,Label,-wraplength {-wraplength wrapLength WrapLength 0 Integertype {} {Class: **WrapLength**     For widgets that can perform word-wrapping, this
option specifies the maximum line length. Lines that would exceed this length
are wrapped onto the next line, so that no line is longer than the specified
length. The value may be specified in any of the standard forms for screen
distances. If this value is less than or equal to 0 then no wrapping is done:
lines will break only at newline characters in the text.}} BWidget,SpinBox,SpinBox,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,ttk::radiobutton,TRadiobutton,-image {-image image Image {} Entrytype {} {Specifies an image to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,ArrowButton,ArrowButton,-relief {-relief relief Relief raised Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,Dialog,Dialog,-side {-side side side bottom Entrytype {} {Specifies where to draw the ButtonBox relative to the user frame. Must be one of **top** , **left** , **bottom** or **right**.}} BWidget,Tree,Tree,-redraw {-redraw redraw redraw 1 Listtype {True False} {Specifies wether or not the tree should be redrawn when entering idle. Set it to false if you call **update** while modifying the tree.}} BWidget,Label,Label,-justify {-justify justify Justify center Listtype {left right center} {**Justify**     When there are multiple lines of text displayed in a widget,
this option determines how the lines line up with each other. Must be one of
**left** , **center** , or **right**. **Left** means that the lines' left
edges all line up, **center** means that the lines' centers are aligned, and
**right** means that the lines' right edges line up.}} Tk,scrollbar,Scrollbar,-borderwidth {-borderwidth borderWidth BorderWidth 1 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,Tree,Tree,-relief {-relief relief Relief sunken Listtype {flat groove raised ridge solid sunken} {Specifies the 3-D effect desired for the widget. Acceptable values are standard values for button relief ( **raised** , **sunken** , **flat** , **ridge** , **solid** , and **groove** ) and **link** , which specifies that button relief is **flat** when pointer is outside the button and **raised** when pointer is inside.
This option has only the following effect if the widget is _themed_ : The
value **link** used a style **Toolbutton** while any other value uses the
standard effect.}} BWidget,ComboBox,ComboBox,-readonlybackground {-readonlybackground readonlyBackground ReadonlyBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the entry is readonly. If this option is the
empty string, the normal background color is used.}} BWidget,Entry,Entry,-dragevent {-dragevent dragevent dragevent 3 Listtype {1 2 3} {Specifies the number of the mouse button associated to the drag. Must be **1** , **2** or **3**.}} BWidget,LabelEntry,LabelEntry,-dropenabled {-dropenabled dropenabled dropenabled 0 Listtype {True False} {A boolean specifying if drop is enabled.}} BWidget,ProgressBar,ProgressBar,-type {-type type type normal Listtype {normal incremental infinite nonincremental_infinite} {Specifies the type of the ProgressBar. Must be one of **normal** , **incremental** , **infinite** or **nonincremental_infinite**.}} BWidget,LabelFrame,LabelFrame,-background {-background background Background #d9d9d9 Colortype {} {Class: **FrameColor**     The widget's background color. If unspecified, the
theme default is used.}} BWidget,Tree,Tree,-selectcommand {-selectcommand selectcommand selectcommand {} Entrytype {} {Specifies a command to be called when the selection is changed. The path of the tree widget and the selected nodes are appended to the command.}} Tk,ttk::frame,TFrame,-borderwidth {-borderwidth borderWidth BorderWidth {} Entrytype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} BWidget,NoteBook,NoteBook,-activeforeground {-activeforeground activeForeground Background #000000 Colortype {} {Color used for the tab's text when the tab is active.}} BWidget,Dialog,Dialog,-bg {-bg background {} {} Entrytype {} {}} BWidget,LabelEntry,LabelEntry,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} BWidget,Entry,Entry,-command {-command command Command {} Entrytype {} {Specifies a command when user press <Return> in the Entry.}} Tk,spinbox,Spinbox,-insertbackground {-insertbackground insertBackground Foreground #000000 Colortype {} {Specifies the color to use as background in
the area covered by the insertion cursor. This color will normally override
either the normal background for the widget (or the selection background if
the insertion cursor happens to fall in the selection).}} BWidget,Entry,Entry,-selectbackground {-selectbackground selectBackground Foreground #c3c3c3 Colortype {} {Specifies the background color to use when
displaying selected items.}} BWidget,MainFrame,Frame,-menubarfont {-menubarfont menubarfont menubarfont {} Entrytype {} {}} BWidget,ComboBox,ComboBox,-droptypes {-droptypes droptypes droptypes {TEXT    {move {}}
        FGCOLOR {move {}}
        BGCOLOR {move {}}
        COLOR   {move {}}} Entrytype {} {Specifies a list of accepted dropped object/operation. See option **droptypes** of **DropSite::[register](DropSite.html#register)**. for more infromation.
Default is _LISTBOX_ITEM_ with operations **copy** and **move**.}} Tk,radiobutton,Radiobutton,-command {-command command Command {} Entrytype {} {Specifies a Tcl command to associate with the button. This
command is typically invoked when mouse button 1 is released over the button
window. The button's global variable ( **-variable** option) will be updated
before the command is invoked.}} Tk,menu,Menu,-disabledforeground {-disabledforeground disabledForeground DisabledForeground #a3a3a3 Colortype {} {Specifies
foreground color to use when drawing a disabled element. If the option is
specified as an empty string (which is typically the case on monochrome
displays), disabled elements are drawn with the normal foreground color but
they are dimmed by drawing them with a stippled fill pattern.}} BWidget,TitleFrame,TitleFrame,-side {-side side side left Listtype {left center right} {Specifies the horizontal alignment of the title: **left** , **center** or **right**.}} Tk,canvas,Canvas,-cursor {-cursor cursor Cursor {} Cursortype {} {Specifies the mouse cursor to be used for the widget. The value
may have any of the forms acceptable to
**[Tk_GetCursor](../TkLib/GetCursor.htm)**. In addition, if an empty string is
specified, it indicates that the widget should defer to its parent for cursor
specification.}} Tk,canvas,Canvas,-selectborderwidth {-selectborderwidth selectBorderWidth BorderWidth 1 Integertype {} {Specifies a non-negative value indicating
the width of the 3-D border to draw around selected items. The value may have
any of the forms acceptable to **[Tk_GetPixels](../TkLib/GetPixels.htm)**.}} Tk,tablelist::tablelist,Tablelist,-ymousewheelwindow {-ymousewheelwindow yMouseWheelWindow MouseWheelWindow {} Entrytype {} {}} Tk,text,Text,-insertwidth {-insertwidth insertWidth InsertWidth 2 Integertype {} {Specifies a value indicating the total width of the
insertion cursor. The value may have any of the forms acceptable to
**[Tk_GetPixels](../TkLib/GetPixels.htm)**. If a border has been specified for
the insertion cursor (using the **-insertborderwidth** option), the border
will be drawn inside the width specified by the **-insertwidth** option.}} Tk,ttk::button,TButton,-text {-text text Text {} Entrytype {} {Specifies a string to be displayed in the tab.}} Tk,panedwindow,Panedwindow,-width {-width width Width {} Entrytype {} {Specifies a desired width for the overall panedwindow widget.
May be any value accepted by **[Tk_GetPixels](../TkLib/GetPixels.htm)**. If an
empty string, the widget will be made wide enough to allow all contained
widgets to have their natural width.}} Tk,ttk::combobox,TCombobox,-takefocus {-takefocus takeFocus TakeFocus ttk::takefocus Entrytype {} {**TakeFocus**     Determines whether the window accepts the focus during
keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a
window, the traversal scripts consult the value of the **-takefocus** option.
A value of **0** means that the window should be skipped entirely during
keyboard traversal. **1** means that the window should receive the input focus
as long as it is viewable (it and all of its ancestors are mapped). An empty
value for the option means that the traversal scripts make the decision about
whether or not to focus on the window: the current algorithm is to skip the
window if it is disabled, if it has no key bindings, or if it is not viewable.
If the value has any other form, then the traversal scripts take the value,
append the name of the window to it (with a separator space), and evaluate the
resulting string as a Tcl script. The script must return **0** , **1** , or an
empty string: a **0** or **1** value specifies whether the window will receive
the input focus, and an empty string results in the default decision described
above. Note: this interpretation of the option is defined entirely by the Tcl
scripts that implement traversal: the widget implementations ignore the option
entirely, so you can change its meaning if you redefine the keyboard traversal
scripts.}} Tk,entry,Entry,-readonlybackground {-readonlybackground readonlyBackground ReadonlyBackground #d9d9d9 Colortype {} {Specifies
the background color to use when the entry is readonly. If this option is the
empty string, the normal background color is used.}} Tk,ttk::separator,TSeparator,-class {-class {} {} {} ? {} {Specifies a class for the window. This class will be used when
querying the option database for the window's other options, and it will also
be used later for other purposes such as bindings. Some window managers
display the class name for windows in their dock while some others display the
window title. The **-class** option may not be changed with the **configure**
widget command.}} Tk,button,Button,-anchor {-anchor anchor Anchor center Listtype {n ne e se s sw w nw center} {Specifies the anchor of the image or window of the node. Defaults to w.}} Tk,checkbutton,Checkbutton,-font {-font font Font TkDefaultFont Fonttype {} {Specifies the font to use
when drawing text inside the widget. The value may have any of the forms
described in the **[font](../TkCmd/font.htm)** manual page under **[FONT
DESCRIPTION](../TkCmd/font.htm)**.}} Tk,ttk::spinbox,TSpinbox,-to {-to to To 0 Floattype {} {floating-point value specifying the highest permissible value for the widget.
See also **-from** and **-increment**. range.}} Tk,labelframe,Labelframe,-borderwidth {-borderwidth borderWidth BorderWidth 2 Integertype {} {Class: **BorderWidth**     The desired width of the widget border. Defaults to
0. May be ignored depending on the theme used.}} Tk,button,Button,-bitmap {-bitmap bitmap Bitmap {} Entrytype {} {Specifies a bitmap to display at the left of the user frame. **image** option override **bitmap**.}} Tk,ttk::treeview,Treeview,-columns {-columns columns Columns {} Entrytype {} {**Columns**     A list of column identifiers, specifying the number of columns
and their names.}} Tk,ttk::sizegrip,TSizegrip,-style {-style style Style {} Entrytype {} {}} BWidget,ListBox,ListBox,-redraw {-redraw redraw redraw 1 Listtype {True False} {Specifies wether or not the listbox should be redrawn when entering idle. Set it to false if you call **update** while modifying the listbox.}} Tk,checkbutton,Checkbutton,-overrelief {-overrelief overRelief OverRelief {} Entrytype {} {Specifies an alternative relief for the checkbutton,
to be used when the mouse cursor is over the widget. This option can be used
to make toolbar buttons, by configuring **-relief flat -overrelief raised**.
If the value of this option is the empty string, then no alternative relief is
used when the mouse cursor is over the checkbutton. The empty string is the
default value.}}